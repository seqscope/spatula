{"config":{"lang":["en"],"separator":"[\\s\\u200b\\-_,:!=\\[\\]()\"`/]+|\\.(?!\\d)|&[lg]t;|(?!\\b)(?=[A-Z][a-z])","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to spatula documentation","text":"<p>This is the documentation for the <code>spatula</code> toolkit. </p>"},{"location":"#what-is-spatula","title":"What is spatula?","text":"<p><code>spatula</code> is a collection of C++ tools that are designed to help analyze  sub-micron resolution spatial transcriptomics data such as Seq-Scope.  These tools are under active development, so they may change frequently. </p>"},{"location":"#documentation-overview","title":"Documentation Overview","text":"<p>This documentation provides the following information:</p> <ul> <li>Quickstart: A quick guide to get started with spatula.</li> <li>Install: How to install spatula.</li> <li>Tools: Documentation of individual tools implemented in spatula.</li> </ul>"},{"location":"install/","title":"Installing spatula","text":""},{"location":"install/#installing-spatula_1","title":"Installing spatula","text":"<p>Spatula contains <code>htslib</code> and <code>qgenlib</code> as submodules, so you need to clone the repository recursively to install the required libraries, and build the submodules before building the <code>spatula</code> package. An example instruction is given below.</p> <pre><code>## STEP 1 : CLONE THE REPOSITORY\n## clone the current snapshot of this repository\ngit clone --recursive https://github.com/seqscope/spatula.git\n\n## move to the spatula directory\ncd spatula\n\n## STEP 2 : BUILD THE SUBMODULES\n## move to the submodules directory\ncd submodules\n\n## build the submodules using build.sh script\nsh -x build.sh\n\n## move to the spatula directory\ncd ..\n\n## STEP 3 : BUILD SPATULA\n## create a build directory\nmkdir build\ncd build\n\n## Run cmake to configure the build\ncmake ..\n\n## Build the spatula package\nmake\n</code></pre> <p>If <code>cmake</code> is not found, you need to install cmake in your system.</p>"},{"location":"install/#optional-customized-specification-of-the-library-path","title":"(Optional) Customized specification of the library path","text":"<p>In case any required libraries is missing in <code>cmake</code>, you may specify customized installing path by replacing \"cmake ..\" with the following options:</p> <pre><code>## If qgenlib is missing or installed in a different directory\n$ cmake -DQGEN_INCLUDE_DIRS=/qgenlib_absolute_path/include\n        -DHTS_LIBRARIES=/qgenlib_absolute_path/lib/libqgen.a ..\n\n## If htslib is missing or installed in a different directory\n$ cmake -DHTS_INCLUDE_DIRS=/htslib_absolute_path/include/  \\\n        -DHTS_LIBRARIES=/htslib_absolute_path/libhts.a ..\n\n## If bzip2 is missing or installed in a different directory\n$ cmake -DBZIP2_INCLUDE_DIRS=/bzip2_absolute_path/include/ \\\n        -DBZIP2_LIBRARIES=/bzip2_absolute_path/lib/libbz2.a ..\n\n## If lzma is missing or installed in a different directory\n$ cmake -DLZMA_INCLUDE_DIRS=/lzma_absolute_path/include/ \\\n        -DLZMA_LIBRARIES=/lzma_absolute_path/lib/liblzma.a ..\n\n## You may combine the multiples options above if needed.\n## Other missing libraries can be handled in a similar way.\n</code></pre>"},{"location":"install/#testing-spatula","title":"Testing spatula","text":"<p>To test whether build was successful, you can run the following command:</p> <pre><code>## Current directory: /path/to/install/spatula/build\n$ ../bin/spatula --help\n</code></pre>"},{"location":"quickstart/","title":"Quickstart for spatula","text":""},{"location":"quickstart/#installing-spatula","title":"Installing spatula","text":"<p>Please follow the instruction below to install <code>spatula</code></p> <pre><code>git clone --recursive https://github.com/seqscope/spatula.git\ncd spatula\ncd submodules\nsh -x build.sh\ncd ..\nmkdir build\ncd build\ncmake ..\nmake\n</code></pre>"},{"location":"quickstart/#list-available-tools","title":"List available tools","text":"<p>To list the available tools, run the following command:</p> <pre><code>../bin/spatula --help\n</code></pre> <p>If you encounter any difficulties, see Install for more details.</p>"},{"location":"tools/","title":"Tools in spatula","text":"<p><code>spatula</code> is a collection of C++ tools that are designed to help analyze  sub-micron resolution spatial transcriptomics data such as Seq-Scope.  The categories of software tools provided includes:</p> <ul> <li>Tools for Analyzing Spatial Barcodes </li> <li>Tools for Analyzing Spatial Gene Expression (SGE)</li> <li>Tools for Processing FASTQ Files</li> <li>Tools for Supporting Analysis with FICTURE</li> <li>Miscellaneous Tools</li> </ul> <p>Note that the documentation contains only a subset of tools that <code>spatula</code> provides.  Other tools not documented here is either deprecated or under active development.</p>"},{"location":"tools/build_sbcds/","title":"spatula build-sbcds","text":""},{"location":"tools/build_sbcds/#summary","title":"Summary","text":"<p><code>spatula build-sbcds</code> creates a spatial barcode dictionary based from an Illumina FASTQ file. Here is a summary of the main features:</p> <ul> <li>Input: Takes a single-ended Illumina-sequenced FASTQ file containing the original read names as  input.</li> <li>Output: Produces a map of spatial barcodes (i.e. a mapping between barcode sequences and spatial coordinates), separated by each tile. It also generates a manifest file that summarizes the output for each tile. </li> </ul> <p>An example usage of the tool is as follows:</p> <pre><code>spatula build-sbcds --fq1 /path/to/input_file.R1.fastq.gz --format DraI32 \\\n                    --out /path/to/output/dir/\n</code></pre> <p>See below for a more detailed usage description.</p>"},{"location":"tools/build_sbcds/#required-options","title":"Required options","text":"<ul> <li><code>--fq</code> : The path to the (single-ended) input FASTQ file. The read name must include the spatial coordinate information. (i.e. SRA-processed read names must not be used)</li> <li><code>--format</code> : Predefined spatial barcode format. It specifies the expected patterns of spatial barcodes, and whether reverse complement is required or not. A limited number of barcode patterns, including experimental ones, are accepted. The most popular choices are:<ul> <li><code>DraI32</code> : 32-bp barcode format from the Seq-Scope paper. The expected pattern in IUPAC codes is <code>NNNNNBNNBNNBNNBNNBNNBNNBNNBVNBNN</code>; reverse complement is performed.</li> <li><code>HDMI20</code> : 20-bp barcode format from the original Seq-Scope paper. This is intended for a small array area; reverse complement is performed.</li> <li><code>DraI31</code> : 31-bp barcode format, almost identical to <code>DraI32</code>. This format is useful for one of the example sequence data we provided, which sequenced only the first 31-bp of <code>DraI32</code> format. The expected pattern in IUPAC codes is <code>NNNNNBNNBNNBNNBNNBNNBNNBNNBVNBN</code>; reverse complement is performed.</li> </ul> </li> <li><code>--out</code> : Output directory that stores the spatial barcode dictionary per tile. See Expected Output for more details.</li> </ul>"},{"location":"tools/build_sbcds/#additional-options","title":"Additional Options","text":"<ul> <li><code>--platform</code> : Platform on which the FASTQ file is generated. This specifies the expected format of the read name. The key fields extracted are <code>LANE</code>, <code>TILE</code>, <code>X</code>, <code>Y</code> coordinates. Currently, the only officially supported format is <code>Illumina</code> (Other experimental formats are not documented here and will not be supported).<ul> <li><code>Illumina</code> : Illumina read name should have the following format: <code>[INSTRUMENT_ID]:[RUN_ID]:[FLOWCELL_ID]:[LANE]:[TILE]:[X]:[Y]</code>. </li> </ul> </li> <li><code>--force-lane</code> : (For experimental platforms only) Force the lane number to a certain value; this is useful for certain platforms where the read name does not contain the lane information. </li> </ul>"},{"location":"tools/build_sbcds/#expected-output","title":"Expected Output","text":"<p>In the output directory <code>[outdir]</code>, the following files will be created.</p> <ul> <li><code>[outdir]/manifest.tsv</code> contains the list of output tsv files. Each line contains the following information:<ul> <li><code>id</code> : ID of the tile as <code>[lane]_[tile]</code></li> <li><code>filepath</code> : Output file name associated with the tile <code>[lane]_[tile].sbcds.sorted.tsv.gz</code>. Note that the output is an unsorted tsv file, which must be sorted externally.</li> <li><code>barcodes</code> : The total number of spatial barcodes found in the tile.</li> <li><code>matches</code> : The number of barcodes matching the expected format.</li> <li><code>mismatches</code> : The number of barcodes that do not match the expected format.</li> <li><code>xmin</code> : The minimum value of the x coordinate per tile</li> <li><code>xmax</code> : The maximum value of the x coordinate per tile</li> <li><code>ymin</code> : The minimum value of the y coordinate per tile.</li> <li><code>ymax</code> : The maximum value of the y coordinate per tile.</li> </ul> </li> <li>For each tile, <code>[outdir]/[lane]_[tile].sbcds.unsorted.tsv</code> contains the barcode sequences and their spatial coordinates in tsv format. Note that the output is an unsorted tsv file, which must be sorted alphabetically and compressed into <code>[lane]_[tile].sbcds.sorted.tsv.gz</code> after <code>build-sbcds</code> has finished. Each column in the tsv file contains the following information:<ol> <li>Spatial barcode sequences (in reverse complement if the specified format requires it).</li> <li>Lane </li> <li>Tile</li> <li>x-coordinate</li> <li>y-coordinate</li> <li>Number of bases that do not match the expected pattern defined by the format (0 is a perfect match).</li> </ol> </li> </ul>"},{"location":"tools/build_sbcds/#full-usage","title":"Full Usage","text":"<p>The full usage of <code>spatula build-sbcds</code> can be viewed with the <code>--help</code> option:</p> <pre><code>$ ./spatula build-sbcds --help\n[./spatula build-sbcds] -- Create spatial barcode dictionary based from HDMI FASTQ arrays\n\n Copyright (c) 2022-2024 by Hyun Min Kang\n Licensed under the Apache License v2.0 http://www.apache.org/licenses/\n\nDetailed instructions of parameters are available. Ones with \"[]\" are in effect:\n\nAvailable Options:\n\n== Input options ==\n   --fq         [STR: ]             : Input FASTQ file that contains spatial barcode in the readname\n   --format     [STR: ]             : Format of the spatial barcodes (e.g. DraI32, HDMI20, T7-30, etc)\n   --platform   [STR: Illumina]     : Platform of the sequencing data to determine the rule to parse the readnames (e.g. Illumina)\n   --force-lane [INT: 0]            : Force a lane number. Required a positive value for Salus/SalusGlobal platforms\n\n== Output Options ==\n   --out        [STR: ]             : Output directory name\n\n\nNOTES:\nWhen --help was included in the argument. The program prints the help message but do not actually run\n</code></pre>"},{"location":"tools/combine_sbcds/","title":"spatula combine-sbcds","text":""},{"location":"tools/combine_sbcds/#summary","title":"Summary","text":"<p><code>spatula combine-sbcds</code> combines spatial barcodes across multiple tiles based on a specified layout of tiles. This tool can be used to generate a spatial barcode map for each 'Chip', a physical unit of spatial transcriptomic experiment, in Seq-Scope platform. </p> <p>Here is a summary of the main features:</p> <ul> <li>Input: Takes (a) a spatial barcode directory from <code>build-sbcds</code> with <code>--sbcd</code>, (b) a manifest file summarizing the files in <code>build-sbcds</code> with <code>--manifest</code>, and \u00a9 a tile layout for the specified Chip with <code>--layout</code>. Additional options may be used. </li> <li>Output: Produces a combined map of spatial barcodes in the output directory, containing a single sorted spatial barcode in <code>tsv.gz</code> format with <code>manifest.tsv</code> file. The output spatial coordinates are converted to nanometer scale.</li> </ul> <p>An example use of the tool is as follows:</p> <p><pre><code>spatula combine-sbcds --layout /path/to/layout.tsv \\\n                      --manifest /path/to/manifest.tsv \\\n                      --sbcd /path/to/sbcd/dir/ \\\n                      --out /path/to/output/dir/ \\\n                      --rowgap 0.0517 --colgap --0.0048 \\\n                      --max-dup 1 --max-dup-dist-nm 1\n</code></pre> See below for a more detailed usage description.</p>"},{"location":"tools/combine_sbcds/#required-options","title":"Required options","text":"<ul> <li><code>--sbcd</code> : The path to the directory containing spatial barcode files, generated by <code>build-sbcds</code>.</li> <li><code>--manifest</code> : The <code>manifest.tsv</code> file containing the summary of each file, generated by <code>build-sbcds</code>.</li> <li><code>--layout</code> : The layout file specifying the spatial arrangement of the tiles to be combined. (If <code>--layout</code> is not available, an <code>--offset</code> file can be specified instead). The layout file must contain the following columns:<ul> <li><code>lane</code> : The lane number of the tile (can be replaced by the <code>id</code> column)</li> <li><code>tile</code> : The tile number of the tile (can be replaced by the<code>id</code> column)</li> <li><code>row</code> : The row number of the tile</li> <li><code>col</code> : The column number of the tile</li> <li><code>rowshift</code> : (Optional) Vertical shift of the row coordinate in proportion to the tile height.</li> <li><code>colshift</code> : (Optional) Horizontal shift of the column coordinate in proportion to the tile width.</li> <li><code>id</code> : (Optional) The ID of each tile, in the format of <code>lane_tile</code> can be used instead of the <code>lane</code> and <code>tile</code> columns.</li> </ul> </li> <li><code>--out</code> : The output directory that stores the combined spatial barcode file and a manifest file. See Expected Output for more details.</li> </ul>"},{"location":"tools/combine_sbcds/#additional-options","title":"Additional options","text":"<ul> <li><code>--offset</code> : The offset file can be used instead of <code>--layout</code> to specify the spatial arrangement of  tiles. If the spatial arrangement between tiles is more complicated than a grid-like arrangement, the offset tile can handle a more general arrangement format. The offset file should contain the following columns:<ul> <li><code>lane</code> : The lane number of the tile (can be replaced by the <code>id</code> column)</li> <li><code>tile</code> : The tile number of the tile (can be replaced by the <code>id</code> column)</li> <li><code>offset_x</code> : The offset for the x-coordinate. This is an offset to add to the x-coordinate of the tile in the scale of (original) pixels per tile.</li> <li><code>offset_y</code> : The offset for the y-coordinate. This is an offset to add to the y-coordinate of the tile in the scale of (original) pixels per tile.</li> <li><code>id</code> : (Optional) The ID of each tile, in the format of <code>lane_tile</code> can be used instead of the <code>lane</code> and <code>tile</code> columns.</li> </ul> </li> <li><code>--pixel-to-nm</code> : The resolution to pixel coordinates to nanometer scale. The default is 34.78 nm/pixel, which is the resolution of the Seq-Scope platform with Illumina Nova-seq 6000. For Seq-Scope platform with Illumina HiSeq 2500, the resolution is 37.5 nm/pixel. </li> <li><code>--rowgap</code> : The additional gap between rows, proportional to the maximum height of the tiles. This is used to adjust the spatial coordinates of the tiles. The default value is 0.0.</li> <li><code>--colgap</code> : The additional gap between columns, proportional to the maximum width of the tiles. This is used to adjust the spatial coordinates of the tiles. The default value is 0.0.</li> <li><code>--match-len</code> : The length of the spatial barcode to be considered for a match. The default is 27. The maximum possible value is 27.</li> <li><code>--max-dup</code> : The number of duplicates to allow for each spatial barcode, within the maximum distance threshold specified by <code>--max-dup-dist-nm</code>. The default  is 1, which means no duplicates are allowed.</li> <li><code>--max-dup-dist-nm</code> : The maximum distance in nanometers allowed for duplicates. The default is 1000.0 nm.</li> <li><code>--write-all</code> : Write all spatial barcodes to the output file, including duplicate and filtered reads. By default, only the unique spatial barcodes that pass the filtering threshold are written to the output file.</li> </ul>"},{"location":"tools/combine_sbcds/#expected-output","title":"Expected Output","text":"<p>In the output directory <code>[outdir]</code>, the following files will be created.</p> <ul> <li><code>[outdir]/manifest.tsv</code> : The manifest file containing the information of the combined spatial barcode file. The line contains the following information:<ul> <li><code>id</code> : ID of the tile as <code>[lane]_[tile]</code></li> <li><code>filepath</code> : The filename of the combined spatial barcode map, which will be <code>1_1.sbcds.sorted.tsv.gz</code> because there will be only a single lane and tile (<code>1_1</code>) in the output.</li> <li><code>barcodes</code> : The total number of spatial barcodes found in the tile.</li> <li><code>matches</code> : The number of barcodes that match the expected format.</li> <li><code>mismatches</code> : The number of barcodes that do not match the expected format.</li> <li><code>xmin</code> : The minimum value of the x coordinate in nanometers.</li> <li><code>xmax</code> : The maximum value of the x coordinate in nanometers.</li> <li><code>ymin</code> : The minimum value of the y coordinate in nanometers.</li> <li><code>ymax</code> : The maximum value of the y coordinate in nanometers.</li> </ul> </li> <li><code>[outdir]/1_1.sbcds.sorted.tsv.gz</code> : The combined spatial barcode file in compressed <code>tsv</code> format. Each column in the tsv file contains the following information:<ol> <li>Spatial barcode sequences (in reverse complement, if specified in the format).</li> <li>Lane (always 1)</li> <li>Tile (always 1)</li> <li>x-coordinate in nanometer scale</li> <li>y-coordinate in nanometer scale</li> <li>Number of bases mismatching to the expected pattern defined by the format (0 is perfect match).</li> </ol> </li> <li><code>[outdir]/dupstats.tsv.gz</code> : Duplicate barcode statistics. For each duplicate barcode, the number of duplicates and the maximum distance between them (if within the <code>--max-dup-dist-nm</code> threshold) are reported.</li> </ul>"},{"location":"tools/combine_sbcds/#full-usage","title":"Full Usage","text":"<p>The full usage of the software tool is as follows:</p> <pre><code>$ ./spatula combine-sbcds --help\n[./spatula combine-sbcds] -- Combine multiple SBCD files\n\n Copyright (c) 2022-2024 by Hyun Min Kang\n Licensed under the Apache License v2.0 http://www.apache.org/licenses/\n\nDetailed instructions of parameters are available. Ones with \"[]\" are in effect:\n\nAvailable Options:\n\n== Input options ==\n   --layout              [STR: ]             : Layout file, each containing [lane] [tile] and [row]/[col] as columns\n   --offset              [STR: ]             : Offset file, each containing [lane] [tile] and [row]/[col] as columns\n   --sbcd                [STR: ]             : Directory containing spatial barcode files\n   --manifest            [STR: ]             : Manifest file containing the list of spatial barcode files\n   --require-exact-match [FLG: OFF]          : Require exact match between manifest file and layout file. If false, layout can only contain subset of tiles in the manifest file\n\n== Output Options ==\n   --out                 [STR: ]             : Output spatial barcode file after merging\n   --write-all           [FLG: OFF]          : Write all spatial barcodes to the output file, including duplicated and filtered reads\n\n== Options for coordinate conversion ==\n   --pixel-to-nm         [FLT: 34.78]        : Pixel to nm conversion factor (37.5 for Seq-Scope)\n   --rowgap              [FLT: 0.00]         : Additional gap between rows (proportional to the height of a tile)\n   --colgap              [FLT: 0.00]         : Additional gap between columns (proportional to the width of a tile)\n\n== Options for duplicate filtering ==\n   --match-len           [INT: 27]           : Length of HDMI spatial barcode to be considered for a match\n   --max-dup             [INT: 1]            : Maximum number of duplicates allowed for each spatial barcode. If this is 1, duplicates are not allowed\n   --max-dup-dist-nm     [FLT: 10000.00]     : Maximum distance allowed for duplicates in nm scale\n\n\nNOTES:\nWhen --help was included in the argument. The program prints the help message but do not actually run\n</code></pre>"},{"location":"tools/convert_sge/","title":"spatula convert-sge","text":""},{"location":"tools/convert_sge/#summary","title":"Summary","text":"<p><code>spatula convert-sge</code> convert digital gene expression (DGE) data following the 10x Genomics Cell Ranger Feature Barcode Matrix format into a generic spatial gene expression TSV file format that can be analyzed by FICTURE. It can also convert spatial gene expression (SGE) data generated by the NovaScope pipeline into the same generic spatial gene expression TSV file format.</p> <p>Here is a summary of the main features:</p> <ul> <li>Input: Takes (a) <code>barcode.tsv.gz</code> file containing spatial barcodes, (b) <code>features.tsv.gz</code> file containing gene names, and \u00a9 <code>matrix.mtx.gz</code> file containing the sparsely encoded gene expression matrix following the MatrixMarket format. If the spatial barcodes do not contain the spatial coordinates (e.g. 10x Visium HD), additional barcode position files must be provided separately in CSV format. </li> <li>Output: A TSV file containing the spatial gene expression data in the format of <code>gene</code>, <code>barcode</code>, <code>x</code>, <code>y</code>, and <code>count</code>. The spatial coordinates are converted to micrometer scale. Note that the output file is NOT sorted by the spatial coordinates.</li> </ul>"},{"location":"tools/convert_sge/#usage","title":"Usage","text":""},{"location":"tools/convert_sge/#converting-seq-scopenovascope-feature-barcode-matrix","title":"Converting Seq-Scope/NovaScope Feature Barcode Matrix","text":"<p>The standard output from the SeqScope Protocol using the NovaScope pipeline generates the following set of output files, assuming <code>${SGEDIR}</code> is the directory containing the SGE output from NovaScope. </p> <ul> <li><code>${SGEDIR}/barcodes.tsv.gz</code> : The barcode file containing the spatial barcodes.</li> <li><code>${SGEDIR}/features.tsv.gz</code> : The feature file containing the gene names.</li> <li><code>${SGEDIR}/matrix.mtx.gz</code> : The matrix file containing the gene expression matrix in the MatrixMarket format.</li> </ul> <p>Note that the <code>barcodes.tsv.gz</code> file contains spatial coordinates in their output. For example, in NovaScope 1.0, the X/Y coordinates of each spatial barcode is located in the 6<sup>th</sup> and 7<sup>th</sup> columns in nanometer scale, respectively.</p> <p>You may obtain the example output of the NovaScope output at our Zenodo repository.</p> <pre><code>## Show the first few lines of the barcode file\n$ gzip -cd ${SGEDIR}/barcodes.tsv.gz | head\n\nAAAAAAAATAGTTCTGCTAGCTGGTAAGCT  1       1       1       1       7124822 2906042 1,1,1,0,0\nAAAAAAAGTGATCAGAGGTGATATTATGCT  2       2       1       1       7382402 2717083 3,3,3,0,0\nAAAAAAAGTTCGCACTATACGAACAGGGAT  3       3       1       1       8634969 2839091 1,1,1,0,0\nAAAAAAGGTACCCGCAGTGCGGACAAACGA  4       4       1       1       4994894 2666443 1,1,1,0,0\nAAAAACGCTCCCCGTTGTGAATGGGGTCGT  5       5       1       1       8575635 3991700 1,1,1,0,0\nAAAAACTCTCAGAAGAGAAAGTAATAGTCG  6       6       1       1       6747424 2860446 1,0,0,0,0\nAAAAAGAGAACCACAGGTAATCCACCTACA  7       7       1       1       5771532 3028677 5,4,3,0,0\nAAAAAGAGGTGAGGGTCGCCTGCATATTAG  8       8       1       1       6614008 3251930 2,2,2,0,0\nAAAAAGGGGTCTAGAGGAGACAATGAAGTG  9       10      1       1       4634991 4060530 2,2,2,0,0\nAAAAATTATGGACGACCTACTTCTCGGTGG  10      15      1       1       5358763 4389131 1,1,1,0,0\n</code></pre> <p>To convert Seq-Scope/NovaScope output to a FICTURE-compatible format, the following two steps are needed.</p>"},{"location":"tools/convert_sge/#1-run-spatula-convert-sge-to-transform-the-input-files-into-a-generic-tsv-file","title":"1. Run <code>spatula convert-sge</code> to transform the input files into a generic TSV file.","text":"<p>Note that you need to install the <code>spatula</code> tool before running the following command. Because the spatial coordinates are in nanometer scale, the <code>--units-per-um</code> parameter should be set to 1000 to convert the coordinates to micrometer scale.</p> <pre><code>## Run spatula convert-sge, assuming that output_dir is the output directory\n$ spatula convert-sge \\\n    --in-sge ${SGEDIR} \\\n    --units-per-um 1000 \\\n    --colnames-count Count \\\n    --out output_dir \n## Uncomment the following line if you want to exclude commonly ignored features\n#   --exclude-feature-regex '^(BLANK|NegCon|NegPrb|mt-|MT-|Gm\\d+$$)'\n## The following parameters follow the default values (unnecessary to specify)\n#   --sge-bcd barcode.tsv.gz \\\n#   --sge-ftr features.tsv.gz \\\n#   --sge-mtx matrix.mtx.gz \\\n#   --icols-mtx 1 \\\n#   --icol-bcd-barcode 1 \\\n#   --icol-bcd-x 6 \\\n#   --icol-bcd-y 7 \\\n#   --icol-ftr-id 1 \\\n#   --icol-ftr-name 2 \\\n#   --colname-x X \\\n#   --colname-y Y \\\n#   --colname-feature-name gene \n</code></pre> <p>Make sure that the output file is generated in the expected format. </p> <pre><code>$ gzip -cd out_dir/transcripts.unsorted.tsv.gz | head\n\nX       Y       gene    Count\n7124.82 2906.04 Pmpcb   1\n7382.40 2717.08 Acin1   1\n7382.40 2717.08 Slc35b1 1\n8634.97 2839.09 Marchf7 1\n4994.89 2666.44 Exosc9  1\n8575.64 3991.70 Gpld1   1\n6747.42 2860.45 Serpina1d       1\n5771.53 3028.68 Ccnl2   1\n5771.53 3028.68 Ugt2b34 1\n</code></pre>"},{"location":"tools/convert_sge/#2-sort-the-generic-tsv-file-by-a-spatial-coordinate","title":"2. Sort the generic TSV file by a spatial coordinate.","text":"<p>You may sort the output file by the spatial coordinates using the <code>sort</code> command. For example, to sort the file by the first column (X-coordinate), you may run the following command.</p> <pre><code>## Sort the unsorted output file by the X-coordinate\n## Note that this step will take a while for a large file\n(gzip -cd output_dir/transcripts.unsorted.tsv.gz \\\n    | head -1; gzip -cd output_dir/transcripts.unsorted.tsv.gz \\\n    | tail -n +2 | sort -S 1G -gk1) \\\n    | gzip -c &gt; output_dir/transcripts.sorted.tsv.gz\n</code></pre>"},{"location":"tools/convert_sge/#converting-10x-genomics-visium-hd-feature-barcode-matrix","title":"Converting 10x Genomics Visium HD Feature Barcode Matrix","text":"<p>The standard output from the 10x Genomics Visium HD pipeline contains many files. Typically, the following files are used for the conversion, assuming <code>${DATADIR}</code> is the directory containing the Visium HD data. </p> <ul> <li><code>${DATADIR}/square_002um/raw_feature_bc_matrix/barcodes.tsv.gz</code> : The barcode file containing the spatial barcodes.</li> <li><code>${DATADIR}/square_002um/raw_feature_bc_matrix/features.tsv.gz</code> : The feature file containing the gene names and IDs.</li> <li><code>${DATADIR}/square_002um/raw_feature_bc_matrix/matrix.mtx.gz</code> : The matrix file containing the gene expression matrix in the MatrixMarket format.</li> <li><code>${DATADIR}/square_002um/spatial/tissue_positions.parquet</code> : The barcode position file containing the spatial coordinates of the barcodes in parquet format.</li> <li><code>${DATADIR}/square_002um/spatial/scalefactors_json.json</code> : The scale factor file containing the pixel-to-micrometer conversion factor <code>microns_per_pixel</code>.</li> </ul> <p>In this example, we used the FFPE mouse brain data downloaded at 10x Genomics website.</p> <p>Instead of using <code>raw_feature_bc_matrix</code> directory <code>filtered_feature_bc_matrix</code> directory may be used if the filtered gene expression matrix is preferred. </p> <p>To convert Visium HD data to a FICTURE-compatible format, the following four steps are needed.</p>"},{"location":"tools/convert_sge/#1-obtain-units-per-um-parameter-from-the-scalefactors_jsonjson-file","title":"1. Obtain <code>units-per-um</code> parameter from the <code>scalefactors_json.json</code> file.","text":"<p>For example, if you may find the <code>microns_per_pixel</code> value as follows:</p> <pre><code>## Find microns_per_pixel value from the scalefactors_json.json file\n$ grep -w microns_per_pixel ${DATADIR}/square_002um/spatial/scalefactors_json.json \n    \"microns_per_pixel\": 0.2738242950835738,\n</code></pre> <p>In this case, the <code>units-per-um</code> value is <code>1/0.2738242950835738 = 3.652</code>.</p>"},{"location":"tools/convert_sge/#2-convert-tissue_positionsparquet-into-a-csv-file","title":"2. Convert <code>tissue_positions.parquet</code> into a CSV file.","text":"<p>The <code>tissue_positions.parquet</code> file can be converted into a CSV file using the <code>parquet-tools</code> command.  Please install parquet-tools before running the following command.</p> <pre><code>## Convert tissue_positions.parquet into a CSV file\n$ parquet-tools csv ${DATADIR}/square_002um/spatial/tissue_positions.parquet \\\n    | gzip -c &gt; ${DATADIR}/square_002um/spatial/tissue_positions.csv.gz\n\n## Check the first few lines of the CSV file\n$ gzip -cd 10x_visium_hd/raw/tissue_positions.csv.gz | head\n\nbarcode,in_tissue,array_row,array_col,pxl_row_in_fullres,pxl_col_in_fullres\ns_002um_00000_00000-1,0,0,0,44.1895274751605,21030.743287971593\ns_002um_00000_00001-1,0,0,1,44.30210038790203,21023.440348914042\ns_002um_00000_00002-1,0,0,2,44.4146732713411,21016.137411757423\ns_002um_00000_00003-1,0,0,3,44.52724612547773,21008.83447650175\ns_002um_00000_00004-1,0,0,4,44.639818950311934,21001.531543147008\ns_002um_00000_00005-1,0,0,5,44.7523917458437,20994.228611693197\ns_002um_00000_00006-1,0,0,6,44.86496451207307,20986.92568214033\ns_002um_00000_00007-1,0,0,7,44.977537249000044,20979.622754488388\ns_002um_00000_00008-1,0,0,8,45.09010995662463,20972.319828737378\n</code></pre>"},{"location":"tools/convert_sge/#3-run-spatula-convert-sge-to-transform-the-input-files-into-a-generic-tsv-file","title":"3. Run <code>spatula convert-sge</code> to transform the input files into a generic TSV file.","text":"<p>Note that you need to install the <code>spatula</code> tool before running the following command.</p> <pre><code>## Run spatula convert-sge, assuming that output_dir is the output directory\n$ spatula convert-sge \\\n    --in-sge ${DATADIR}/square_002um/raw_feature_bc_matrix \\\n    --pos ${DATADIR}/square_002um/spatial/tissue_positions.csv.gz \\\n    --units-per-um 3.652 \\\n    --colnames-count Count \\\n    --out output_dir \n## Uncomment the following line if you want to exclude commonly ignored features\n#   --exclude-feature-regex '^(BLANK|NegCon|NegPrb|mt-|MT-|Gm\\d+$$)'\n## The following parameters follow the default values (unnecessary to specify)\n#   --sge-bcd barcode.tsv.gz \\\n#   --sge-ftr features.tsv.gz \\\n#   --sge-mtx matrix.mtx.gz \\\n#   --icols-mtx 1 \\\n#   --icol-bcd-barcode 1 \\\n#   --icol-ftr-id 1 \\\n#   --icol-ftr-name 2 \\\n#   --pos-colname-barcode barcode \\\n#   --pos-colname-x pxl_row_in_fullres \\\n#   --pos-colname-y pxl_col_in_fullres \\\n#   --pos-delim , \\\n#   --colname-x X \\\n#   --colname-y Y \\\n#   --colname-feature-name gene \n</code></pre> <p>Make sure that the output file is generated in the expected format. </p> <pre><code>$ gzip -cd output_dir/transcripts.unsorted.tsv.gz | head\n\nX       Y       gene    Count\n13.58   5662.74 Ctps2   1\n14.04   5632.75 Rab28   1\n14.19   5752.76 Omg     1\n14.19   5752.76 Prnp    1\n14.99   5700.77 Sorbs1  1\n15.70   5654.77 Myoc    1\n15.89   5642.78 Fgfr1op2        1\n16.53   5600.78 Hmgcr   1\n18.32   5484.80 Stmn1   1\n</code></pre>"},{"location":"tools/convert_sge/#4-sort-the-generic-tsv-file-by-a-spatial-coordinate","title":"4. Sort the generic TSV file by a spatial coordinate.","text":"<p>You may sort the output file by the spatial coordinates using the <code>sort</code> command. For example, to sort the file by the first column (X-coordinate), you may run the following command.</p> <pre><code>## Sort the unsorted output file by the X-coordinate\n## Note that this step will take a while for a large file\n(gzip -cd output_dir/transcripts.unsorted.tsv.gz \\\n    | head -1; gzip -cd output_dir/transcripts.unsorted.tsv.gz \\\n    | tail -n +2 | sort -S 1G -gk1) \\\n    | gzip -c &gt; output_dir/transcripts.sorted.tsv.gz\n</code></pre>"},{"location":"tools/convert_sge/#command-line-arguments","title":"Command line arguments","text":""},{"location":"tools/convert_sge/#key-options","title":"Key options","text":"<ul> <li><code>--in-sge</code> : The path to the directory containing spatial barcode files.</li> <li><code>--out-tsv</code> : The path to the directory to store the output files.</li> <li><code>--icols-mtx</code> : Comma-separated 1-based column indices use as the count in the <code>matrix.mtx.gz</code> file.</li> <li><code>--colnames-count</code> : Comma-separate column names for Count for each column in the output file. The order should match to <code>--icols-mtx</code>.</li> <li><code>--icol-bcd-barcode</code> : The 1-based column index of the barcode in the <code>barcodes.tsv.gz</code> file.</li> <li><code>--icol-bcd-x</code> : 1-based column index of X coordinate in the <code>barcodes.tsv.gz</code> file (when <code>--pos</code> is not provided).</li> <li><code>--icol-bcd-y</code> : 1-based column index of Y coordinate in the <code>barcodes.tsv.gz</code> file (when <code>--pos</code> is not provided).</li> <li><code>--icol-ftr-id</code> : 1-based column index of the feature (gene) ID in the <code>features.tsv.gz</code> file.</li> <li><code>--icol-ftr-name</code> : 1-based column index of the feature name (gene symbol) in the <code>features.tsv.gz</code> file.</li> <li><code>--pos</code> : The path to the barcode position file (typically used for Visium HD input in CSV format).</li> <li><code>--units-per-um</code> : The number of units (i.e. pixels) per micrometer for the spatial coordinates.</li> </ul>"},{"location":"tools/convert_sge/#gene-filtering-options","title":"Gene filtering options","text":"<ul> <li><code>--include-feature-list</code> ; A file containing a list of input genes to be included (feature name of IDs)</li> <li><code>--exclude-feature-list</code> ; A file containing a list of input genes to be excluded (feature name of IDs)</li> <li><code>--include-feature-substr</code> : A substring of feature/gene names to be included</li> <li><code>--exclude-feature-substr</code> : A substring of feature/gene names to be excluded</li> <li><code>--include-feature-regex</code> : A regular expression of feature/gene names to be included</li> <li><code>--exclude-feature-regex</code> : A regular expression of feature/gene names to be excluded</li> </ul>"},{"location":"tools/convert_sge/#additional-options","title":"Additional options","text":"<ul> <li><code>--out-sge</code> : The path to the directory to store the output files in the barcode-feature-matrix format (still experimental).</li> <li><code>--sge-bcd</code> : The name of the barcode file in the barcode-feature-matrix format. Default is <code>barcodes.tsv.gz</code>.</li> <li><code>--sge-ftr</code> : The name of the feature file in the barcode-feature-matrix format. Default is <code>features.tsv.gz</code>.</li> <li><code>--sge-mtx</code> : The name of the matrix file in the barcode-feature-matrix format. Default is <code>matrix.mtx.gz</code>.</li> <li><code>--tsv-mtx</code> : The name of the matrix file in the generic TSV format. Default is <code>transcripts.unsorted.tsv.gz</code>.</li> <li><code>--tsv-ftr</code> : The name of the feature file in the generic TSV format. Default is <code>features.tsv.gz</code>.</li> <li><code>--tsv-minmax</code> : The name of the minmax coordinate file in the generic TSV format. Default is <code>minmax.tsv</code>.</li> <li><code>--pos-colname-barcode</code> : The column name of the barcode in the barcode position file.</li> <li><code>--pos-colname-x</code> : The column name of the X coordinate in the barcode position file.</li> <li><code>--pos-colname-y</code> : The column name of the Y coordinate in the barcode position file.</li> <li><code>--pos-delim</code> : The delimiter used in the barcode position file. Default is <code>,</code>.</li> <li><code>--precision-um</code> : Output precision below the decimal point.</li> <li><code>--print-feature-id</code> : Turn on to print feature ID in addition to feature name.</li> <li><code>--allow-duplicate-gene-names</code> : Turn on to allow duplicate gene names in the output file.</li> <li><code>--colname-feature-name</code> : Column name for feature/gene name in the ouput file (default is <code>gene</code>).</li> <li><code>--colname-feature-id</code> : Column name for feature/gene ID (default is <code>gene_id</code>).</li> <li><code>--colname-x</code> : Column name for X-coordinate in the output file (default is <code>X</code>).</li> <li><code>--colname-y</code> : Column name for Y-coordinate in the output file (default is <code>Y</code>).</li> </ul>"},{"location":"tools/convert_sge/#expected-output","title":"Expected Output","text":"<p>In the output directory <code>[outdir]</code>, the following files will be created.</p> <ul> <li><code>[outdir]/transcript.unsorted.tsv.gz</code> : A generic TSV file that contains individual spatial coordinates and transcript counts. Each column in the tsv file contains the following information. The column names may vary depending on the input arguments.<ul> <li><code>X</code> : The X-coordinate of the spatial barcode / molecule in micrometer.</li> <li><code>Y</code> : The Y-coordinate of the spatial barcode / molecule in micrometer.</li> <li><code>gene</code> : The gene name of the transcript.</li> <li><code>Count</code> : The number of transcripts detected in the spatial barcode. May be named as <code>gn</code>, <code>gt</code> or other names depending on the <code>--colnames-count</code> argument. </li> </ul> </li> <li><code>[outdir]/feature.tsv.gz</code> : A TSV containing the list of gene names, possibly gene IDs, and overall counts per each gene.</li> <li><code>[outdir]/minmax.tsv</code> : A TSV containing the minimum and maximum coordinates of the spatial barcodes.<ul> <li><code>xmin</code> : The minimum X-coordinate of the spatial barcodes in micrometer.</li> <li><code>xmax</code> : The maximum X-coordinate of the spatial barcodes in micrometer.</li> <li><code>ymin</code> : The minimum Y-coordinate of the spatial barcodes in micrometer.</li> <li><code>ymax</code> : The maximum Y-coordinate of the spatial barcodes in micrometer.</li> </ul> </li> </ul>"},{"location":"tools/convert_sge/#full-usage","title":"Full Usage","text":"<p>The full usage of the software tool is as follows:</p> <pre><code>$ ./spatula convert-sge --help\n[./spatula convert-sge] -- Convert SGE into plain various formats\n\n Copyright (c) 2022-2024 by Hyun Min Kang\n Licensed under the Apache License v2.0 http://www.apache.org/licenses/\n\nDetailed instructions of parameters are available. Ones with \"[]\" are in effect:\n\nAvailable Options:\n\n== Key Input/Output Options ==\n   --in-sge                     [STR: ]             : Input SGE directory\n   --out-sge                    [STR: ]             : Path of SGE output directory\n   --out-tsv                    [STR: ]             : Path of TSV output directory\n\n== File names for SGE/TSV input/output ==\n   --sge-bcd                    [STR: barcodes.tsv.gz] : Barcode file name in SGE directory\n   --sge-ftr                    [STR: features.tsv.gz] : Feature file name in SGE directory\n   --sge-mtx                    [STR: matrix.mtx.gz] : Matrix file name in SGE directory\n   --tsv-mtx                    [STR: transcripts.unsorted.tsv.gz] : Transcript file name in TSV directory\n   --tsv-ftr                    [STR: features.tsv.gz] : Feature file name in TSV directory\n   --tsv-minmax                 [STR: minmax.tsv]   : Minmax file name in TSV directory\n\n== Expected column index in SGE input ==\n   --icols-mtx                  [STR: 1,2,3,4,5]    : Comma-separated 1-based column indices use as the count\n   --icol-bcd-barcode           [INT: 1]            : 1-based column index of barcode in the barcode file\n   --icol-bcd-x                 [INT: 6]            : 1-based column index of x coordinate in the barcode file\n   --icol-bcd-y                 [INT: 7]            : 1-based column index of y coordinate in the barcode file\n   --icol-ftr-id                [INT: 1]            : 1-based column index of feature ID in the barcode file\n   --icol-ftr-name              [INT: 2]            : 1-based column index of feature name in the barcode file\n\n== Additional Barcode Position File ==\n   --pos                        [STR: ]             : Position file name that contains separate X and Y coordinates\n   --pos-colname-barcode        [STR: barcode]      : Column name for barcode in the position file\n   --pos-colname-x              [STR: pxl_row_in_fullres] : Column name for X-axis in the position file\n   --pos-colname-y              [STR: pxl_col_in_fullres] : Column name for Y-axis in the position file\n   --pos-delim                  [STR: ,]            : Delimiter for the position file (default: \",\")\n\n== Input Filtering Options ==\n   --include-feature-list       [STR: ]             : A file containing a list of input genes to be included (feature name of IDs)\n   --exclude-feature-list       [STR: ]             : A file containing a list of input genes to be excluded (feature name of IDs)\n   --include-feature-substr     [STR: ]             : A substring of feature/gene names to be included\n   --exclude-feature-substr     [STR: ]             : A substring of feature/gene names to be excluded\n   --include-feature-regex      [STR: ]             : A regex pattern of feature/gene names to be included\n   --exclude-feature-regex      [STR: ]             : A regex pattern of feature/gene names to be excluded\n\n== Key Output Options ==\n   --units-per-um               [FLT: 1.00]         : Coordinate unit per um (conversion factor)\n   --precision-um               [INT: 3]            : Output precision below the decimal point\n\n== Auxilary Output Options for TSV output ==\n   --print-feature-id           [FLG: OFF]          : Print feature ID in output file\n   --allow-duplicate-gene-names [FLG: OFF]          : Allow duplicate gene names in the output file\n   --colname-feature-name       [STR: gene]         : Column name for feature/gene name\n   --colname-feature-id         [STR: gene_id]      : Column name for feature/gene ID\n   --colnames-count             [STR: gn,gt,spl,unspl,ambig] : Comma-separate column names for Count\n   --colname-x                  [STR: X]            : Column name for X\n   --colname-y                  [STR: Y]            : Column name for Y\n\n\nNOTES:\nWhen --help was included in the argument. The program prints the help message but do not actually run\n</code></pre>"},{"location":"tools/custom_demux_fastq/","title":"spatula custom-demux-fastq","text":""},{"location":"tools/custom_demux_fastq/#summary","title":"Summary","text":"<p><code>spatula custom-demux-fastq</code> takes FASTQ files of sequenced reads and indexes to demultiplex the reads by sample. Compared to the default FASTQ demultiplexing tool provided by Illumina, <code>custom-demux-fastq</code> allows users to specify the matching criteria in a more flexible way. Specifically, the software performs demultiplexing based on the following criteria:</p> <ul> <li>Unlike the default Illumina demultiplexing tool, <code>custom-demux-fastq</code> does not consider <code>N</code> as mismatches (by default).</li> <li>The software allows users to specify the number of mismatches allowed to be considered as the match.</li> <li>It also requires that the 2<sup>nd</sup>-best matching index sequences have larger hamming distance with the index sequences with a specific margin, compared to the best matching index sequences.</li> </ul> <p>Note that this tool is NOT limited to demultiplexing spatial transcriptomics sequence data, and can be used for a general tool for demultiplexing FASTQ files as well.</p> <p>Also note that this tool uses multi-process parallelization to speed up the compression. It is recommended to run this tool with at least 5-10 CPUs. <code>gzip</code> or <code>pigz</code> must be installed in the system to compress the output files.</p> <p>Here is a summary of a typical use case:</p> <ul> <li>Input: Takes FASTQ files that contain (a) Read 1, (b) Read 2 (optional), \u00a9 Index 1, (d) Index 2 (optional) sequences.</li> <li>Output: Produces multiple sets of FASTQs separated by the sample identity.</li> </ul> <p>A typical example is as follows:</p> <pre><code>spatula custom-demux-fastq --R1 /path/to/input.R1.fastq.gz \\\n                           --R2 /path/to/input.R2.fastq.gz \\\n                           --I1 /path/to/input.I1.fastq.gz \\\n                           --sample /path/to/sample.index.tsv \\\n                           --out /path/to/output_prefix\n</code></pre> <p>See below for a more detailed usage description.</p>"},{"location":"tools/custom_demux_fastq/#detailed-usage-description","title":"Detailed Usage Description","text":"<p>There are two expected use cases of <code>spatula custom_demux_fastq</code>:</p>"},{"location":"tools/custom_demux_fastq/#demultiplexing-from-bcl-files","title":"Demultiplexing from BCL files","text":"<p>If you have access to the full BCL file, instead of demultiplexing individual samples, you may run <code>bcl2fastq</code> tool without performing demultiplexing, but creating index sequences as follows: </p> <pre><code>## ${bcldir} : directory containing BCL files\n## ${outdir} : directory of output FASTQ files\nbcl2fastq -R ${bcldir} -o ${outdir} --create-fastq-for-index-reads\n</code></pre> <p>Then all reads in the FASTQ file will be written into \"Undetermined\" FASTQs. You can use <code>spatula custom_demux_fastq</code> as input to demultiplex FASTQ files instead. </p>"},{"location":"tools/custom_demux_fastq/#further-demultiplexing-already-demultiplexed-fastq-files","title":"Further demultiplexing already demultiplexed FASTQ files","text":"<p>If you already have demultiplexed FASTQ files, you will already have FASTQ files that are demultiplexed individual samples. We typically do NOT recommend running <code>spatula custom_demux_fastq</code> on the FASTQ files that are successfully demultiplexed, as the results will look very similar to the default <code>bcl2fastq</code> pipeline. </p> <p>However, if you have a substantial amount of \"Undetermined\" reads remaining, you may want use <code>spatula custom_demux_fastq</code> to further demultiplex the reads. Because Illumina's <code>bcl2fastq</code> pipeline typically performs demulitplexing in a conservative way, you may be able to rescue some of the reads with this tool.</p> <p>Note that, if you have a very large number of samples (e.g. &gt;10) demultiplexed in a single run, modifying the default parameter (e.g. using <code>--min-diff 1</code> and/or <code>--max-mismatch 1</code>) may be necessary to achieve more sensible results.</p>"},{"location":"tools/custom_demux_fastq/#key-options","title":"Key options","text":"<ul> <li><code>--R1</code> : (Required) The path to the FASTQ file of Read 1.</li> <li><code>--R2</code> : (Optional) The path to the FASTQ file of Read 2.</li> <li><code>--I1</code> : (Required) The path to the FASTQ file of Index 1.</li> <li><code>--I2</code> : (Optional) The path to the FASTQ file of Index 2.</li> <li><code>--sample</code> : (Required) Sample index file in <code>tsv</code> format, with the following three columns:<ul> <li><code>ID</code> : Sample ID. Must be unique.</li> <li><code>I1</code> : Index 1 sequence.</li> <li><code>I2</code> : Index 2 sequence (if available). </li> </ul> </li> <li><code>--out</code> : (Required) The prefix of the output file ([out_prefix].[sample_ID][suffix]) paths. See Expected Output for more details.</li> </ul>"},{"location":"tools/custom_demux_fastq/#additional-options","title":"Additional Options","text":"<ul> <li><code>--cmd</code> : The command to run for compressing output files. Each file is compressed with the command specified. The default is <code>gzip -c</code>. Another popular choice could be <code>pigz -p 4 -c</code>, which is faster than <code>gzip -c</code> if <code>pigz</code> is installed.</li> <li><code>--max-mismatch</code> : The maximum number of mismatches allowed to be considered as a match. The default is 2.</li> <li><code>--min-diff</code> : Minimum difference in the hamming distance with the index sequence between the best and second best match. The default is 2.</li> <li><code>--suffix-R1</code> : The suffix of Read 1 output files. The default is <code>.R1.fastq.gz</code>.</li> <li><code>--suffix-R2</code> : The suffix of Read 2 output files. The default is <code>.R2.fastq.gz</code>.</li> <li><code>--suffix-I1</code> : The suffix of Index 1 output files. The default is <code>.I1.fastq.gz</code>.</li> <li><code>--suffix-I2</code> : The suffix of Index 2 output files. The default is <code>.I2.fastq.gz</code>.</li> <li><code>--ambiguous</code> : The sample ID of the ambiguously demultiplexed reads. The default is <code>ambiguous</code>.</li> </ul>"},{"location":"tools/custom_demux_fastq/#expected-output","title":"Expected Output","text":"<p>With <code>[out_prefix]</code> as the prefix, and <code>[sample_ID]</code> be the ID of best-matching samples, the following files will be created:</p> <ul> <li><code>[out_prefix].[sample_ID].R1.fastq.gz</code> : The FASTQ file of Read 1 for the sample.</li> <li><code>[out_prefix].[sample_ID].R2.fastq.gz</code> : The FASTQ file of Read 2 for the sample (if available).</li> <li><code>[out_prefix].[sample_ID].I1.fastq.gz</code> : The FASTQ file of Index 1 for the sample.</li> <li><code>[out_prefix].[sample_ID].I2.fastq.gz</code> : The FASTQ file of Index 2 for the sample (if available).</li> <li>If the suffix is specified with <code>--suffix-R1</code>, <code>--suffix-R2</code>, <code>--suffix-I1</code>, <code>--suffix-I2</code>, the suffix will be replaced with the specified suffix.</li> </ul>"},{"location":"tools/custom_demux_fastq/#full-usage","title":"Full Usage","text":"<p>The full usage of <code>spatula subset-sge</code> can be viewed with the <code>--help</code> option:</p> <pre><code>$ ./spatula custom-demux-fastq --help\n[./spatula custom-demux-fastq] -- Demultiplex FASTQ files based in a customized manner\n\n Copyright (c) 2022-2024 by Hyun Min Kang\n Licensed under the Apache License v2.0 http://www.apache.org/licenses/\n\nDetailed instructions of parameters are available. Ones with \"[]\" are in effect:\n\nAvailable Options:\n\n== Input options ==\n   --R1                     [STR: ]             : FASTQ file for read 1\n   --R2                     [STR: ]             : FASTQ file for read 2\n   --I1                     [STR: ]             : FASTQ file for index 1\n   --I2                     [STR: ]             : FASTQ file for index 2\n   --sample                 [STR: ]             : Sample sheet file containing [ID] [I1] [I2]\n\n== Settings ==\n   --cmd                    [STR: gzip -c]      : Command to compress the output files\n   --consider-N-as-mismatch [FLG: OFF]          : Consider N as mismatch (default: false)\n   --max-mismatch           [INT: 2]            : Maximum number of mismatch allowed\n   --min-diff               [INT: 2]            : Minimum difference between the best and second best match\n\n== Output Options ==\n   --out                    [STR: ]             : Output prefix\n   --suffix-R1              [STR: .R1.fastq.gz] : Output suffix for read 1\n   --suffix-R2              [STR: .R2.fastq.gz] : Output suffix for read 2\n   --suffix-I1              [STR: .I1.fastq.gz] : Output suffix for index 1\n   --suffix-I2              [STR: .I2.fastq.gz] : Output suffix for index 2\n   --ambiguous              [STR: ambiguous]    : The keyword for ambiguous samples (default: ambiguous)\n\n\nNOTES:\nWhen --help was included in the argument. The program prints the help message but do not actually run\n</code></pre>"},{"location":"tools/dge2sge/","title":"spatula dge2sge","text":""},{"location":"tools/dge2sge/#summary","title":"Summary","text":"<p><code>spatula dge2sge</code> creates the STARsolo output of digital expression, joins the spatial barcode map, and produces the spatial gene expression (SGE) matrix.</p> <p>Here is a summary of a typical use case:</p> <ul> <li>Input: Takes (a) a spatial barcode map of matching barcodes produced from <code>match-sbcds</code>) and (b)  10X-format digital expression matrix (with <code>barcodes.tsv.gz</code>, <code>feature.tsv.gz</code>, and one or more <code>matrix.mtx.gz</code>).</li> <li>Output: Produces spatially coordinated gene expression (SGE) matrix, which is similar to the 10X format, but (a) with additional information such as spatial coordinates, and (b) with the ability to annotate multiple types of readout in a single output matrix.</li> </ul> <p>An example usage of the tool is as follows:</p> <pre><code>spatula dge2sge  --match /path/to/input.match.sorted.uniq.tsv.gz \\\n                 --bcd /path/to/STARsolo.out/GeneFull/raw/barcodes.tsv.gz \\\n                 --ftr /path/to/STARsolo.out/GeneFull/raw/features.tsv.gz \\\n                 --mtx /path/to/STARsolo/out/Gene/raw/matrix.mtx.gz \\\n                 --mtx /path/to/STARsolo.out/GeneFull/raw/matrix.mtx.gz \\\n                 --mtx /path/to/STARsolo.out/Velocyto/raw/spliced.mtx.gz \\\n                 --mtx /path/to/STARsolo.out/Velocyto/raw/unspliced.mtx.gz \\\n                 --mtx /path/to/STARsolo.out/Velocyto/raw/ambiguous.mtx.gz \\\n                 --out /path/to/output/dir/\n</code></pre> <p>See below for a more detailed usage description.</p>"},{"location":"tools/dge2sge/#required-options","title":"Required options","text":"<ul> <li><code>--match</code> : The path to the spatial barcode map (<code>*.match.sorted.uniq.tsv.gz</code>) file that contains matching barcodes to the 2<sup>nd</sup>-seq FASTQ file, generated by <code>match-sbcds</code>. Instead of <code>--match</code>, the full sbcd directory can be used with <code>--sbcd</code> option (see Additional options for details).</li> <li><code>--bcd</code> : The path to the <code>barcodes.tsv.gz</code> file that contains the full list of barcodes from the STARsolo output. Each line contains a column of barcode sequence, following the Market Exchange format</li> <li><code>--ftr</code> : The path to the <code>features.tsv.gz</code> file that contains the full list of genes (or features) from the STARsolo output. Each line contains three columns: <code>gene_id</code>, <code>gene_name</code>, and <code>feature_type</code>, following the Market Exchange format</li> <li><code>--mtx</code> : (allows multiple entries) The path to the <code>matrix.mtx.gz</code> file that contains the digital expression matrix from the STARsolo output. After three header lines, the matrix file contains (a) barcode index (1-based), (b) gene index (1-based), and \u00a9 count, the Market Exchange format. Multiple <code>--mtx</code> options can be used as long as they share the same barcodes and feature information.</li> <li><code>--out</code> : Output directory that stores the spatial gene expression (SGE) output files. See Expected Output for more details.</li> </ul>"},{"location":"tools/dge2sge/#additional-options","title":"Additional Options","text":"<ul> <li><code>--sbcd</code> : Directory that contains the spatial barcode dictionary per tile. This can be used instead of <code>--match</code> option, if the list of matching barcodes are unavailable. </li> </ul>"},{"location":"tools/dge2sge/#expected-output","title":"Expected Output","text":"<p>In the output directory <code>[outdir]</code>, the following files will be created.</p> <ul> <li><code>[outdir]/barcodes.tsv.gz</code> contains the list of barcodes in the SGE matrix. Each line contains the following information:<ol> <li>Barcode sequence</li> <li>Increasing index of the barcode (1-based), which is not necessarily contiguous.</li> <li>Sequential and contiguous index of the barcode (1-based). This should match to the integer IDs of barcodes in the <code>matrix.mtx.gz</code> file.</li> <li>Lane of spatial coordinate</li> <li>Tile of spatial coordinate</li> <li>X-coordinate of spatial coordinate</li> <li>Y-coordinate of spatial coordinate</li> <li>Comma-separated counts of observations in each <code>matrix.mtx.gz</code> file. The order of the counts should match the order of <code>--mtx</code> options.</li> </ol> </li> <li><code>[outdir]/features.tsv.gz</code> contains the list of genes in the SGE matrix. Each line contains the following information:<ol> <li>Gene ID (unique identifier)</li> <li>Gene name</li> <li>Sequential and contiguous index of the gene (1-based). This should match to the integer IDs of genes in the <code>matrix.mtx.gz</code> file.</li> <li>Comma-separated counts of observations in each <code>matrix.mtx.gz</code> file. The order of the counts should match the order of <code>--mtx</code> options.</li> </ol> </li> <li><code>[outdir]/matrix.mtx.gz</code> contains the spatial expression matrix in the SGE format. After three header lines following the Market Exchange format, the matrix file contains the following information, separated by spaces.<ol> <li>barcode index (1-based)</li> <li>gene index (1-based)</li> <li>(multiple space-separated entries) counts of observations, in the order of input files in <code>--mtx</code> options.</li> </ol> </li> <li><code>[outdir]/[lane]</code> directory contains <code>barcodes.tsv.gz</code>, <code>features.tsv.gz</code>, and <code>matrix.mtx.gz</code>, for the specific lane, in the same format.</li> <li><code>[outdir]/[lane]/[tile]</code> directory contains <code>barcodes.tsv.gz</code>, <code>features.tsv.gz</code>, and <code>matrix.mtx.gz</code>, for the specific tile, in the same format.</li> </ul>"},{"location":"tools/dge2sge/#full-usage","title":"Full Usage","text":"<p>The full usage of <code>spatula dge2sdge</code> can be viewed with the <code>--help</code> option:</p> <pre><code>$  ./spatula dge2sge --help   \n[./spatula dge2sge] -- Convert DGE (from STARsolo) into SGE format\n\n Copyright (c) 2022-2024 by Hyun Min Kang\n Licensed under the Apache License v2.0 http://www.apache.org/licenses/\n\nDetailed instructions of parameters are available. Ones with \"[]\" are in effect:\n\nAvailable Options:\n\n== Input options ==\n   --sbcd  [STR: ]             : Spatial barcode dictionary generated from 'build-sbcds' command\n   --match [V_STR: ]           : List of spatial barcode files that were used for whitelist generation\n   --bcd   [STR: ]             : Shared barcode file path (e.g. barcodes.tsv.gz)\n   --ftr   [STR: ]             : Shared feature file path (e.g. feature.tsv.gz)\n   --mtx   [V_STR: ]           : Shared matrix file path (e.g. matrix.mtx.gz)\n\n== Output Options ==\n   --out   [STR: ]             : Output directory\n\n\nNOTES:\nWhen --help was included in the argument. The program prints the help message but do not actually run\n</code></pre>"},{"location":"tools/draw_3way/","title":"spatula draw-3way","text":""},{"location":"tools/draw_3way/#summary","title":"Summary","text":"<p><code>spatula draw-3way</code> is a tool to visualize the spatial distribution of 1<sup>st</sup>-seq and 2<sup>nd</sup>-seq reads of Seq-Scope data for each 'Chip'.</p> <p>IMPORTANT ImageMagick must be installed to use this tool.</p> <p>A typical use case is as follows:</p> <ul> <li>Input: Takes (a) an output <code>combine-sbcds</code>, (b) (multiple) outputs <code>match-sbcds</code>, and \u00a9 output from <code>dge2sge</code> commands from individual tools.</li> <li>Output: Produces an 2D image that plots the (a) all 1<sup>st</sup>-seq spatial barcodes from <code>combine-sbcds</code> in blue, (b) all 2<sup>nd</sup>-seq spatial barcodes from <code>match-sbcds</code> in green, and \u00a9 all 2<sup>nd</sup>-seq spatial barcodes aligned to genes from <code>dge2sge</code> in red.</li> </ul> <p>A typical example is as follows:</p> <pre><code>spatula draw-3way --manifest /path/to/combine/sbcds/output/dir/manifest.tsv \\\n                  --nbcd     /path/to/combine/sbcds/output/dir/1_1.sbcds.sorted.tsv.gz \\\n                  --nmatch   /path/to/match/sbcds/output/prefix1.match.sorted.uniq.tsv.gz \\\n                  --nmatch   /path/to/match/sbcds/output/prefix2.match.sorted.uniq.tsv.gz \\\n                  --ngebcd   /path/to/dge2sge/output/dir/barcodes.tsv.gz \\\n                  --out      /path/to/output/image.png                \n</code></pre> <p>See below for a more detailed usage description.</p>"},{"location":"tools/draw_3way/#required-options","title":"Required options","text":"<ul> <li><code>--manifest</code> : The <code>manifest.tsv</code> file from the <code>combine-sbcds</code> file that contains the summary of the spatial coordinate of a Seq-Scope Chip.</li> <li><code>--nbcd</code> : The spatial barcode file from the <code>combine-sbcds</code> command. The filename is usually <code>1_1.sbcds.sorted.tsv.gz</code>.</li> <li><code>--nmatch</code> : (Multiple allowed) The spatial barcode file from the <code>match-sbcds</code> command. The filename is usually <code>prefix.match.sorted.uniq.tsv.gz</code>.</li> <li><code>--ngebcd</code> : The spatial barcode file from the <code>dge2sge</code> command. The filename is usually <code>barcodes.tsv.gz</code>.</li> <li><code>--out</code> : The output filename of the image. Currently, <code>.png</code> is supported. </li> </ul>"},{"location":"tools/draw_3way/#additional-options","title":"Additional Options","text":"<ul> <li><code>--coord-per-pixel</code> : The number of coordinates to be collapsed into a pixel as a factor to divide the input coordinate with. The default is 1000.0.</li> <li><code>--color-nbcd</code> : The RGB hex color code for the 1<sup>st</sup>-seq spatial barcodes in the order of G,B,R. The default is <code>#004800</code> (blue).</li> <li><code>--color-nmatch</code> : The RGB hex color code for the 2<sup>nd</sup>-seq spatial barcodes in the order of G,B,R. The default is <code>#640000</code> (green).</li> <li><code>--color-nge</code> : The RGB hex color code for the 2<sup>nd</sup>-seq spatial barcodes aligned to genes in the order of G,B,R. The default is <code>#000032</code> (red).</li> <li><code>--icol-x-nbcd</code> : The (0-based) column index of the X coordinate in the 1<sup>st</sup>-seq spatial barcode file. The default is 3.</li> <li><code>--icol-y-nbcd</code> : The (0-based) column index of the Y coordinate in the 1<sup>st</sup>-seq spatial barcode file. The default is 4.</li> <li><code>--icol-x-nmatch</code> : The (0-based) column index of the X coordinate in the 2<sup>nd</sup>-seq spatial barcode file. The default is 3.</li> <li><code>--icol-y-nmatch</code> : The (0-based) column index of the Y coordinate in the 2<sup>nd</sup>-seq spatial barcode file. The default is 4.</li> <li><code>--icol-x-ngebcd</code> : The (0-based) column index of the X coordinate in the 2<sup>nd</sup>-seq spatial barcode file. The default is 5.</li> <li><code>--icol-y-ngebcd</code> : The (0-based) column index of the Y coordinate in the 2<sup>nd</sup>-seq spatial barcode file. The default is 6.</li> <li><code>--icol-gene-ngebcd</code> : The (0-based) column index of the gene count in the 2<sup>nd</sup>-seq spatial barcode file. The default is 7.</li> <li><code>--isubcol-gene-ngebcd</code> : The (0-based) sub column index of the gene count (among the comma-separated-values) in the 2<sup>nd</sup>-seq spatial barcode file. The default is 0.</li> <li><code>--id-manifest</code> : The ID of the tile in the manifest file to use. The default is <code>1_1</code>.</li> </ul>"},{"location":"tools/draw_3way/#expected-output","title":"Expected Output","text":"<p>The output <code>[out]</code> will be created as a PNG file containing the image of the input points.</p>"},{"location":"tools/draw_3way/#full-usage","title":"Full Usage","text":"<p>The full usage of <code>spatula draw-3way</code> can be viewed with the <code>--help</code> option:</p> <pre><code>$ ./spatula draw-3way --help\n[./spatula draw-3way] -- Draw the 3-way image from the output of sttools pipeline\n\n Copyright (c) 2022-2024 by Hyun Min Kang\n Licensed under the Apache License v2.0 http://www.apache.org/licenses/\n\nDetailed instructions of parameters are available. Ones with \"[]\" are in effect:\n\nAvailable Options:\n\n== Input files ==\n   --manifest            [STR: ]             : Manifest file from combine-sbcds. xmin/xmax/ymin/ymax will be automatically detected\n   --nbcd                [STR: ]             : Spatial barcode dictionary generated from 'combine-sbcds' command\n   --nmatch              [V_STR: ]           : Spatial barcode dictionary generated from 'match-sbcds' command\n   --ngebcd              [STR: ]             : Spatial barcode dictionary generated from alignment pipeline\n\n== Input options ==\n   --icol-x-nbcd         [INT: 3]            : 0-based index of the column for x in nbcd\n   --icol-y-nbcd         [INT: 4]            : 0-based index of the column for y in nbcd\n   --icol-x-nmatch       [INT: 3]            : 0-based index of the column for x in nmatch\n   --icol-y-nmatch       [INT: 4]            : 0-based index of the column for y in nmatch\n   --icol-x-ngebcd       [INT: 5]            : 0-based index of the column for x in ngebcd\n   --icol-y-ngebcd       [INT: 6]            : 0-based index of the column for y in ngebcd\n   --icol-gene-ngebcd    [INT: 7]            : 0-based index of the column for gene count in ngebcd\n   --isubcol-gene-ngebcd [INT: 0]            : 0-based index of the sub column for gene count in ngebcd (0: Gene, 1: GeneFull, ...)\n   --id-manifest         [STR: 1_1]          : ID of the tile in the manifest file to use\n\n== Output options ==\n   --coord-per-pixel     [FLT: 1000.00]      : Number of coordinate units per pixel\n   --color-nbcd          [STR: #004800]      : RGB hex color code for nbcd per observation\n   --color-nmatch        [STR: #640000]      : RGB hex color code for nmatch per observation\n   --color-nge           [STR: #000032]      : RGB hex color code for nge per observation\n\n== Output Options ==\n   --out                 [STR: ]             : Output file name\n\n\nNOTES:\nWhen --help was included in the argument. The program prints the help message but do not actually run\n</code></pre>"},{"location":"tools/draw_sge/","title":"spatula draw-sge","text":""},{"location":"tools/draw_sge/#summary","title":"Summary","text":"<p><code>spatula draw-sge</code> is a tool to visualize the spatial gene expression based on specific combination of colors and gene set. </p> <p>IMPORTANT ImageMagick must be installed to use this tool.</p> <p>A typical use case is as follows:</p> <ul> <li>Input: Takes a SGE matrix from <code>dge2sge</code> and the list of genes (with designated colors) to visualize the spatial gene expression.</li> <li>Output: Produces an 2D image that plots the spatial distribution of expression of selected genes.</li> </ul> <p>A typical example is as follows:</p> <pre><code>spatula draw-sge  --manifest /path/to/combine/sbcds/output/dir/manifest.tsv \\\n                  --sge      /path/to/dge2sge/output/dir \\\n                  --color-gene 320000:_all_:1 \\ \n                  --color-gene 003200:Glul,Cyp2e1:1 \\\n                  --color-list 000064:/path/to/custom/gene_list.tsv \\\n                  --out      /path/to/output/image.png\n                  --auto-adjust                \n</code></pre> <p>See below for a more detailed usage description.</p>"},{"location":"tools/draw_sge/#required-options","title":"Required options","text":"<ul> <li><code>--sge</code> : The directory containing SGE matrix, typically from <code>dge2sge</code> command.</li> <li><code>--out</code> : The output filename of the image. Currently, <code>.png</code> is supported. </li> </ul>"},{"location":"tools/draw_sge/#options-to-specify-genes-to-visualize","title":"Options to Specify Genes to Visualize","text":"<ul> <li><code>--color-gene</code> : (Allows multiple uses) A string formatted as [RGB_Hex_Code]:[gene1],[gene2],...:[idx]. <ul> <li>The <code>[RGB_Hex_Code]</code> is the RGB hex color code (<code>RRGGBB</code> format) for each observation of the specified genes.</li> <li>The <code>[gene1],[gene2],...</code> is the list of genes to color with the specified color. Either gene ID (e.g. <code>ENSMUSG00000026473</code>) or gene symbol (e.g. <code>Glul</code>) may be used. <code>_all_</code> can be used to color all genes with the specified color.</li> <li>The <code>[idx]</code> is optional field to specify the index of the gene expression in the SGE matrix. (e.g. 1: Gene, 2: GeneFull, 3: Spliced, 4: Unspliced, 5: Velocyto). The default is 1.</li> <li>For example, <code>--color-gene 003200:Glul,Cyp2e1:1</code> will color Glul and Cyp2e1 genes with green (increasing intensity by 50 for each observation).</li> </ul> </li> <li><code>--color-regex</code> : (Allows multiple uses) A string formatted as [RGB_Hex_Code]:[regex_pattern]:[idx]. <ul> <li>The <code>[RGB_Hex_Code]</code> is the RGB hex color code (<code>RRGGBB</code> format) for each observation of the specified genes.</li> <li>The <code>[regex_pattern</code> is the regulat expression pattern to specify the list of genes. Here are some examples:</li> <li>You can specify multiple genes like <code>^(Glul|Cyp2e1)$</code> </li> <li>You can specify genes with a common prefix like <code>^mt-.*$</code> (for mitochondrial genes)</li> <li>The <code>[idx]</code> is optional field to specify the index of the gene expression in the SGE matrix. (e.g. 1: Gene, 2: GeneFull, 3: Spliced, 4: Unspliced, 5: Velocyto). The default is 1.</li> <li>For example, <code>--color-gene 003200:^(Glul|Cyp2e1):1</code> will color Glul and Cyp2e1 genes with green (increasing intensity by 50 for each observation).</li> </ul> </li> <li><code>--color-list</code> : (Allows multiple uses) A string formatted as [RGB_Hex_Code]:[path_to_gene_list]:[default_idx].<ul> <li>The <code>[RGB_Hex_Code]</code> is the RGB hex color code (<code>RRGGBB</code> format) for each observation of the specified genes.</li> <li>The <code>[path_to_gene_list]</code> is the path to the gene list file. The file should contain a list of gene names of gene IDs (without headers)</li> <li>The <code>[default_idx]</code> is optional field to specify the index of the gene expression in the SGE matrix. (e.g. 1: Gene, 2: GeneFull, 3: Spliced, 4: Unspliced, 5: Velocyto). This is only in effect when <code>idx</code> column is not present in the <code>[path_to_gene_list]</code> file.</li> <li>If <code>[default_idx]</code> is absent, it will be defaulted to 1 (Gene)</li> <li>For example, <code>--color-list 000064:/path/to/custom/gene_list.tsv</code> will color genes in the <code>/path/to/custom/gene_list.tsv</code> file with blue, with <code>default_idx=1</code>, increasing intensity by 100 for each observation.</li> <li>Here is an example content of the gene list file <code>mt-genes.tsv</code>, which contains gene ID for mitochondrial genes in mouse: <pre><code>mt-Nd1\nmt-Nd2\nmt-Co1\nmt-Co2\nmt-Atp8\nmt-Atp6\nmt-Co3\nmt-Nd3\nmt-Nd4l\nmt-Nd4\nmt-Nd5\nmt-Nd6\nmt-Cytb\n</code></pre></li> </ul> </li> </ul>"},{"location":"tools/draw_sge/#additional-options","title":"Additional Options","text":"<ul> <li><code>--manifest</code> : The <code>manifest.tsv</code> file from the <code>combine-sbcds</code> file that contains the summary of the spatial coordinate of a Seq-Scope Chip. It must contain <code>xmin</code>, <code>xmax</code>, <code>ymin</code>, and <code>ymax</code> columns. This option is REQUIRED unless <code>--auto-adjust</code> is used.</li> <li><code>--auto-adjust</code> : Automatically adjust the intensity of the color based on the maximum count. The default is OFF.</li> <li><code>--adjust-quantile</code> : The quantile of pixel to use for auto-adjustment among non-zero pixels. The default is 0.99.</li> <li><code>--coord-per-pixel</code> : The number of coordinates to be collapsed into a pixel as a factor to divide the input coordinate with. The default is 1000.0.</li> <li><code>--bcd</code> : The barcode file name in the SGE directory. The default is <code>barcodes.tsv.gz</code>.</li> <li><code>--ftr</code> : The feature file name in the SGE directory. The default is <code>features.tsv.gz</code>.</li> <li><code>--mtx</code> : The matrix file name in the SGE directory. The default is <code>matrix.mtx.gz</code>.</li> </ul>"},{"location":"tools/draw_sge/#expected-output","title":"Expected Output","text":"<p>The output <code>[out]</code> will be created as a PNG file containing the image of the input points.</p>"},{"location":"tools/draw_sge/#full-usage","title":"Full Usage","text":"<p>The full usage of <code>spatula draw-sge</code> can be viewed with the <code>--help</code> option:</p> <pre><code>$ ./spatula draw-sge --help\n[./spatula draw-sge] -- Draw the image of spatial gene expression (SGE) data\n\n Copyright (c) 2022-2024 by Hyun Min Kang\n Licensed under the Apache License v2.0 http://www.apache.org/licenses/\n\nDetailed instructions of parameters are available. Ones with \"[]\" are in effect:\n\nAvailable Options:\n\n== Input files ==\n   --minmax          [STR: ]             : Bounding box information. Expects xmin/xmax/ymin/ymax (tall or wide format)\n   --sge             [STR: ]             : SGE directory\n   --bcd             [STR: barcodes.tsv.gz] : Barcode file name\n   --ftr             [STR: features.tsv.gz] : Feature file name\n   --mtx             [STR: matrix.mtx.gz] : Matrix file name\n\n== Genes to visualize ==\n   --color-gene      [V_STR: ]           : [color_code]:[gene1],[gene2],... as a visualization unit. Adding :[idx] at the end is optional\n   --color-regex     [V_STR: ]           : [color_code]:[regex](:[idx]) as a visualization unit. [regex] is a regulat expression. Adding :[idx] at the end is optional\n   --color-list      [V_STR: ]           : [color_code]:[list_file](:[idx]) as a visualization unit\n\n== Output options ==\n   --coord-per-pixel [FLT: 1000.00]      : Number of coordinate units per pixel\n   --auto-adjust     [FLG: OFF]          : Automatically adjust the intensity of the color based on the maximum count\n   --adjust-quantile [FLT: 0.99]         : Quantile of pixel to use for auto-adjustment among non-zero pixels\n\n== Output Options ==\n   --out             [STR: ]             : Output file name\n\nNOTES:\nWhen --help was included in the argument. The program prints the help message but do not actually run\n</code></pre>"},{"location":"tools/draw_xy/","title":"spatula draw-xy","text":""},{"location":"tools/draw_xy/#summary","title":"Summary","text":"<p><code>spatula draw-xy</code> is a simple tool that draws an image of 2D points provided as an input. </p> <p>IMPORTANT ImageMagick must be installed to use this tool.</p> <p>A typical use case is as follows:</p> <ul> <li>Input: TSV file (or can be streamed from STDIN), that contains X and Y coordinates of individual points to be plotted. </li> <li>Output: Produces a grayscale 2D image that plots all the input points based on the specified scaling factor and intensity.</li> </ul> <p>A typical example is as follows:</p> <pre><code>spatula draw-xy --tsv /path/to/input.tsv.gz \\\n                --out /path/to/output.png \\\n                --coord-per-pixel 1000 \\\n                --icol-x 3 \\\n                --icol-y 4 \\\n                --intensity-per-obs 50\n</code></pre> <p>See below for a more detailed usage description.</p>"},{"location":"tools/draw_xy/#required-options","title":"Required options","text":"<ul> <li><code>--tsv</code> : The input TSV file that contains spatial coordinates of the points. <code>/dev/stdin</code> can be used to stream the input from STDIN.</li> <li><code>--out</code> : The output filename of the image. Currently, <code>.png</code> is supported. </li> </ul>"},{"location":"tools/draw_xy/#additional-options","title":"Additional Options","text":"<ul> <li><code>--width</code> : The width of the output image. If not specified, the width will be determined based on the minimum and maximum coordinates of the input points.</li> <li><code>--height</code> : The height of the output image. If not specified, the height will be determined based on the minimum and maximum coordinates of the input points.</li> <li><code>--coord-per-pixel</code> : The number of coordinates to be collapsed into a pixel as a factor to divide the input coordinate with. The default is 1.0.</li> <li><code>--intensity-per-obs</code> : The intensity (max 255) of individual points to contribute to the pixel. The default is 1.0.</li> <li><code>--icol-x</code> : The (0-based) column index of the X coordinate in the input TSV file. The default is 0.</li> <li><code>--icol-y</code> : The (0-based) column index of the Y coordinate in the input TSV file. The default is 1.</li> </ul>"},{"location":"tools/draw_xy/#expected-output","title":"Expected Output","text":"<p>The output <code>[out]</code> will be created as a PNG file containing the image of the input points.</p>"},{"location":"tools/draw_xy/#full-usage","title":"Full Usage","text":"<p>The full usage of <code>spatula draw-xy</code> can be viewed with the <code>--help</code> option:</p> <pre><code>$ ./spatula draw-xy --help           \n[./spatula draw-xy] -- Draw the image of points in 2D space\n\n Copyright (c) 2022-2024 by Hyun Min Kang\n Licensed under the Apache License v2.0 http://www.apache.org/licenses/\n\nDetailed instructions of parameters are available. Ones with \"[]\" are in effect:\n\nAvailable Options:\n\n== Input options ==\n   --tsv               [STR: ]             : tsv file to draw the x-y coordinates. /dev/stdin for stdin\n   --icol-x            [INT: 0]            : 0-based index of the column for x\n   --icol-y            [INT: 1]            : 0-based index of the column for y\n\n== Settings ==\n   --width             [INT: 0]            : Width of the image\n   --height            [INT: 0]            : Height of the image\n   --coord-per-pixel   [FLT: 1.00]         : Number of coordinate units per pixel\n   --intensity-per-obs [INT: 1]            : Intensity per pixel per observation\n\n== Output Options ==\n   --out               [STR: ]             : Output file name\n\n\nNOTES:\nWhen --help was included in the argument. The program prints the help message but do not actually run\n</code></pre>"},{"location":"tools/eval_dups_sbcds/","title":"spatula eval-dups-sbcds","text":""},{"location":"tools/eval_dups_sbcds/#summary","title":"Summary","text":"<p><code>spatula eval-dups-sbcds</code> examines duplicates in the spatial barcode dictionary generated by <code>spatula build-sbcds</code> and produces summary statistics.</p> <p>Here is a summary of the main features:</p> <ul> <li>Input: Takes a spatial barcode directory from <code>build-sbcds</code>.</li> <li>Output: In the output directory, it produces (a) a complete list of duplicate barcodes, with the number of occurrences and the number of unique tiles observed, (b) per-tile summary metrics of the number of duplicate barcodes, and \u00a9 the histogram of the observed counts of each duplicate.</li> </ul> <p>An example use of the tool is as follows:</p> <p><pre><code>spatula eval-dups-sbcds --sbcd /path/to/sbcd/dir/ \\\n                        --out  /path/to/output_prefix \n</code></pre> See below for a more detailed usage description.</p>"},{"location":"tools/eval_dups_sbcds/#required-options","title":"Required options","text":"<ul> <li><code>--sbcd</code> : The path to the directory containing spatial barcode files, generated by <code>build-sbcds</code>.</li> <li><code>--out</code> : The prefix for the output files. See Expected Output for more details.</li> </ul>"},{"location":"tools/eval_dups_sbcds/#additional-options","title":"Additional options","text":"<ul> <li><code>--match-len</code> : The length of the spatial barcode to consider for a match. The default  is 27, and the maximum possible value is 27.</li> </ul>"},{"location":"tools/eval_dups_sbcds/#expected-output","title":"Expected Output","text":"<p>With <code>[out_prefix]</code> as the prefix, the following files will be created:</p> <ul> <li><code>[out_prefix].dups.sbcds.tsv.gz</code> : A compressed tsv file containing the following entries in each line:<ul> <li><code>barcode</code> : Spatial barcode that is observed multiple times across the tiles.</li> <li><code>ntiles</code> : Number of unique tiles where the spatial barcodes were observed.</li> <li><code>dupcount</code> : The number of occurrences of the spatial barcode across the tiles.</li> </ul> </li> <li><code>[out_prefix].tiles.tsv</code> : A tab-delimited file summarizing the duplicate barcode statistics. It contains the following entries in each row:<ul> <li><code>tile</code> : The ID of the tile, in the format of <code>lane_tile</code>.</li> <li><code>total</code> : The total number of spatial barcodes found in the tile.</li> <li><code>uniq</code> : The number of unique spatial barcodes (across tiles) found in the tile.</li> <li><code>dups_uniq</code> : The number of non-unique spatial barcodes in the tile, counting only once per tile.</li> <li><code>dups_within</code> : The number of non-unique spatial barcodes observed only within a single tile, counting only once per tile.</li> <li><code>dups_between</code> : The number of non-unique spatial barcodes observed across multiple tiles, counting only once per tile.</li> </ul> </li> <li><code>[out_prefix].hist.tsv</code> : The histogram of the observed counts of each duplicate, across all tiles. It contains the following entries in each row.<ul> <li><code>dupcount</code> : The number of occurrences of the spatial barcode across the tiles.</li> <li><code>num</code> : The number of spatial barcodes observed with the <code>dupcount</code> occurrences.</li> </ul> </li> </ul>"},{"location":"tools/eval_dups_sbcds/#full-usage","title":"Full Usage","text":"<p>The full usage of the software tool is as follows:</p> <pre><code>$ ./spatula eval-dups-sbcds --help\n[./spatula eval-dups-sbcds] -- Evaluate duplicates in spatial barcodes\n\n Copyright (c) 2022-2024 by Hyun Min Kang\n Licensed under the Apache License v2.0 http://www.apache.org/licenses/\n\nDetailed instructions of parameters are available. Ones with \"[]\" are in effect:\n\nAvailable Options:\n\n== Input options ==\n   --sbcd      [STR: ]             : Spatial barcode dictionary generated from 'build-sbcds' command\n   --match-len [INT: 27]           : Length of HDMI spatial barcodes to require perfect matches\n\n== Output Options ==\n   --out       [STR: ]             : Prefix of output files (.dups.sbcds.tsv.gz, .tiles.tsv, .hist.tsv)\n\n\nNOTES:\nWhen --help was included in the argument. The program prints the help message but do not actually run\n</code></pre>"},{"location":"tools/join_pixel_tsv/","title":"spatula join-pixel-tsv","text":""},{"location":"tools/join_pixel_tsv/#summary","title":"Summary","text":"<p><code>spatula join-pixel-tsv</code> combines the raw input data used in FICTURE analysis with the  pixel-level output generated by FICTURE into a single TSV file.</p> <p>The main reason of creating this tool is related to the fact that the pixel-level output file (in TSV format) produced by FICTURE is quite complicated for users.  The image output (PNG file) generated by FICTURE is very straightforward to interpret, but the TSV file might not be due to the following reasons:</p> <ul> <li>The pixel-level output is sorted by two spatial coordinates (X and Y) in a complex way to navigate mini-batches efficiently.</li> <li>The X/Y coordinates in the pixel-level output needs to be transformed to be interpreted in the original spatial coordinate system.</li> <li>There can be duplicate information near the boundaries between mini-batches.</li> <li>Some spatial coordinates within certain distance (e.g. &lt;0.1um or &lt;0.01um) are collapsed together for efficient processing based on the parameter settings used.</li> <li>The pixel-level output do not provide the raw transcript information observed at the spatial position.</li> <li>Some of the spatial coordinates located in very sparse regions may have been filtered out in the pixel-level output.</li> </ul> <p>For these reasons, there have been requests to provide pixel-level inference from FICTURE by combining the raw input data with the pixel-level output. <code>spatula join-pixel-tsv</code> is intended to provide the information by post-processing the pixel-level output from FICTURE. While the tool relies on some heuristics, we believe that the output should be reasonable as long as FICTURE is run with typical settings.</p> <p>For each spatial coordinate in the raw input data, <code>spatula join-pixel-tsv</code> identifies the closest point in each pixel-level output (as long as the distance is within a certain threshold) and annotate individual pixels with corresponding factors inferred by FICTURE. Because FICTURE's pixel-level output is spatially smooth, this method should be almost identical to running FICTURE on individual  spatial coordinate without collapsing nearby points. This procedure should also remove any duplicate points between mini-batches in FICTURE's pixel-level output.</p>"},{"location":"tools/join_pixel_tsv/#usage","title":"Usage","text":""},{"location":"tools/join_pixel_tsv/#sorting-the-pixel-level-output-from-ficture","title":"Sorting the pixel-level output from FICTURE","text":"<p>The <code>spatula join-pixel-tsv</code> tool assumes that the pixel-level output is sorted by the major axis, in the consistent way to the input data used in FICTURE analysis. For example, if the input file (typically <code>transcripts.sorted.tsv.gz</code>) is sorted by the X-coordinate, the pixel-level output should be sorted by the X-coordinate as well. Typically, the pixel-level output TSV files generated by FICTURE are NOT sorted by a single coordinate, so you will need to sort the file based on the major axis used to sort the input data <code>transcripts.sorted.tsv.gz</code> using the following command, assuming <code>${PREFIX}.pixel.sorted.tsv.gz</code> is the pixel-level output from FICTURE</p> <pre><code># ${PREFIX}.pixel.sorted.tsv.gz is the pixel-level output from FICTURE\n# This example assumes that the major axis is X-axis\n# If the major axis is Y-axis, use -gk3 instead of -gk2.\n(gzip -cd ${PREFIX}.pixel.sorted.tsv.gz \\\n    | head | grep ^#; \\\n    gzip -cd ${PREFIX}.pixel.sorted.tsv.gz \\\n    | grep -v ^# | sort -S 1G -gk2) \\\n    | gzip -c &gt; ${PREFIX}.pixel.sorted_by_major_axis.tsv.gz\n</code></pre>"},{"location":"tools/join_pixel_tsv/#running-spatula-join-pixel-tsv-with-multiple-pixel-level-outputs-from-ficture","title":"Running <code>spatula join-pixel-tsv</code> with multiple pixel-level outputs from FICTURE","text":"<p>The <code>spatula join-pixel-tsv</code> tool can be run with multiple pixel-level outputs from FICTURE. The tool will combine the pixel-level outputs into a single TSV file. As an example, assume that there are two pixel-level outputs from FICTURE, namely <code>nF12.d_12.decode.prj_12.r_4_5.pixel.sorted.tsv.gz</code> and <code>nF24.d_12.decode.prj_12.r_4_5.pixel.sorted.tsv.gz</code>. Using the sorting procedure described above, you may sort the pixel-level outputs by the major axis with the name <code>nF12.d_12.decode.prj_12.r_4_5.pixel.sorted_by_major_axis.tsv.gz</code> and <code>nF24.d_12.decode.prj_12.r_4_5.pixel.sorted_by_major_axis.tsv.gz</code>.</p> <p>We assume that we want to combine the following three files together: * <code>transcripts.sorted.tsv.gz</code> : The generic TSV input file used in FICTURE analysis, sorted by the major axis. * <code>nF12.d_12.decode.prj_12.r_4_5.pixel.sorted_by_major_axis.tsv.gz</code> : A pixel-level output from FICTURE, sorted by the major axis. We want to use a prefix <code>nF12__</code> in the output. * <code>nF24.d_12.decode.prj_12.r_4_5.pixel.sorted_by_major_axis.tsv.gz</code> : Another pixel-level output from FICTURE, sorted by the major axis. We want to use a prefix <code>nF24__</code> in the output.</p> <p>To join these files together, you may run the following command:</p> <pre><code>## assume that the output file names are transcripts_ficture_joined.tsv.gz\nspatula join-pixel-tsv \\\n    --in-tsv transcripts.sorted.tsv.gz \\\n    --pix-prefix-tsv nF12__,nF12.d_12.decode.prj_12.r_4_5.pixel.sorted_by_major_axis.tsv.gz \\\n    --pix-prefix-tsv nF24__,nF24.d_12.decode.prj_12.r_4_5.pixel.sorted_by_major_axis.tsv.gz \\\n    --out-prefix transcripts_ficture_joined \\\n    --max-dist-um 0.2\n</code></pre> <p>Then <code>transcripts_ficture_joined.tsv.gz</code> and auxiliary files will be produced. </p> <p>Example output may look like this:</p> <pre><code>X   Y   gene    gn  nF12__K1    nF12__P1    nF24__K1    nF24__P1\n187.35  3904.17 Fmod    1   NA  NA  NA  NA\n187.37  3822.76 Aqp4    1   4   1   8   1\n187.39  3798.29 Gfap    1   NA  NA  NA  NA\n187.45  3866.88 Igfbp5  1   NA  NA  NA  NA\n187.46  3819.01 Igfbp5  1   NA  NA  NA  NA\n187.49  3820.90 Ntsr2   1   NA  NA  NA  NA\n187.62  3822.98 Igf2    1   4   1   8   1\n187.68  3946.95 Vat1l   1   4   1   8   1\n187.77  3822.63 Gng12   1   4   0.614   4   1\n187.81  3844.77 Angpt1  1   4   1   8   1\n187.81  3845.66 Carmn   1   4   1   8   1\n187.86  3823.45 Slc39a12    1   2   0.529   4   0.999\n...\n</code></pre> <p>Note that you may observe many lines with <code>NA</code> in the beginning of the files because they tend to be located in very sparse region excluded in the FICTURE analysis.</p>"},{"location":"tools/join_pixel_tsv/#command-line-arguments","title":"Command line arguments","text":""},{"location":"tools/join_pixel_tsv/#key-options","title":"Key options","text":"<ul> <li><code>--mol-tsv</code> : Genetic TSV file sorted by the major axis. Typically <code>transcripts.sorted.tsv.gz</code>.</li> <li><code>--pix-prefix-tsv</code> : (Can be used multiple times) A string in <code>[prefix],[filename]</code> format that specifies the prefix and the pixel-level output file (sorted by the major axis). The prefix will be used to annotate the columns in the output file.</li> <li><code>--out-prefix</code> : Prefix of output files.</li> <li><code>--max-dist-um</code> : The maximum theshold (in um) of distance between the spatial coordinates in transcripts and FICTURE's pixel-level decoding output to be considered as a match.</li> <li><code>--out-max-k</code> : The maximum number of pixel-level factors to be included in the joined output (default: 1)</li> <li><code>--out-max-p</code> : The maximum number of posterior probabilities to be included in the joined output (default: 1)</li> <li><code>--sort-axis</code> : The major axis used to sort the input data. Default is <code>X</code>. If the major axis is <code>Y</code>, use <code>Y</code> instead.</li> </ul>"},{"location":"tools/join_pixel_tsv/#additional-options","title":"Additional options","text":"<ul> <li><code>--bin-um</code> : The unit of binning (in um) to search for nearest match. Default value 1um is recommended.</li> <li><code>--colname-x</code> : Column name for X-coordinate in the output file (default is <code>X</code>).</li> <li><code>--colname-y</code> : Column name for Y-coordinate in the output file (default is <code>Y</code>).</li> <li><code>--colnames-include</code> : Comma-separated column names to include in the output TSV file.</li> <li><code>--colnames-exclude</code> : Comma-separated column names to exclude in the output TSV file.</li> <li><code>--out-suffix-tsv</code> : Suffix to stored the output TSV file</li> <li><code>--out-suffix-hist</code> : Suffix to stored the output histogram file of best matching distances.</li> </ul>"},{"location":"tools/join_pixel_tsv/#expected-output","title":"Expected Output","text":"<p>If the output prefix is <code>${OUTPREFIX}</code>, the following files will be created.</p> <ul> <li><code>${OUT_PREFIX}.tsv.gz</code> : A generic TSV file that has the same columns with the input files (unless some columns are excluded), and additional columns for each pixel-level output to represent the matching factor and posterior probability.</li> <li><code>${OUT_PREFIX}.hist.tsv</code> : A histogram file that shows the distribution of the best matching distances between the spatial coordinates in the input file and the pixel-level output from FICTURE.</li> </ul>"},{"location":"tools/join_pixel_tsv/#full-usage","title":"Full Usage","text":"<p>The full usage of the software tool is as follows:</p> <pre><code>$ ./spatula join-pixel-tsv --help       \n[./spatula join-pixel-tsv] -- Join pixel-level output from FICTURE with raw transcript-level TSV files\n\n Copyright (c) 2022-2024 by Hyun Min Kang\n Licensed under the Apache License v2.0 http://www.apache.org/licenses/\n\nDetailed instructions of parameters are available. Ones with \"[]\" are in effect:\n\nAvailable Options:\n\n== Key Input/Output Options ==\n   --mol-tsv            [STR: ]             : TSV file containing individual molecules\n   --pix-prefix-tsv     [V_STR: ]           : TSV file containing pixel-level factors\n   --out-prefix         [STR: ]             : Output prefix for the joined TSV files\n\n== Key Parameters ==\n   --bin-um             [FLT: 1.00]         : Bin size for grouping the pixel-level output for indexing\n   --max-dist-um        [FLT: 0.50]         : Maximum distance in um to consider a match\n\n== Expected columns in input and output ==\n   --colname-x          [STR: X]            : Column name for X-axis\n   --colname-y          [STR: Y]            : Column name for Y-axis\n   --sort-axis          [STR: X]            : Column name used in sorting. Both files must be sorted in the same axis (default: X-axis)\n   --colnames-include   [STR: ]             : Comma-separated column names to include in the output TSV file\n   --colnames-exclude   [STR: ]             : Comma-separated column names to exclude in the output TSV file\n   --out-max-k          [INT: 1]            : Maximum number of pixel-level factors to include in the joined output. (Default : 1)\n   --out-max-p          [INT: 1]            : Maximum number of pixel-level posterior probabilities to include in the joined output. (Default : 1)\n\n== Output File suffixes ==\n   --out-suffix-tsv     [STR: .tsv.gz]      : Suffix for the output TSV file\n   --out-suffix-hist    [STR: .dist.hist.tsv] : Suffix for the histogram of match distance\n   --out-suffix-summary [STR: .summary.tsv] : Suffix for the summary file\n\n\nNOTES:\nWhen --help was included in the argument. The program prints the help message but do not actually run\n</code></pre>"},{"location":"tools/match_sbcds/","title":"spatula match-sbcds","text":""},{"location":"tools/match_sbcds/#summary","title":"Summary","text":"<p><code>spatula match-sbcds</code> matches a 2<sup>nd</sup>-seq FASTQ file with the spatial barcodes map and  identifies matching barcodes and their spatial distribution. </p> <p>Here is a summary of the main features:</p> <ul> <li>Input: Takes (a) a spatial barcode directory from <code>build-sbcds</code> or <code>combined-sbcds</code>, and (b) a 2<sup>nd</sup>-seq FASTQ file (read 1 only).</li> <li>Output: Produces (a) a full list of matching barcodes and their spatial coordinates, (b) summary metrics of reads matching to the barcodes, and \u00a9 per-tile summary metrics of matching barcodes.</li> </ul> <p>An example usage of the tool is as follows:</p> <p><pre><code>spatula match-sbcds --fq /path/to/second_seq.R1.fastq.gz \\\n                    --sbcd /path/to/sbcd/dir/ \\\n                    --skip-sbcd 1 \\\n                    --out /path/to/output_prefix\n</code></pre> See below for a more detailed usage description.</p>"},{"location":"tools/match_sbcds/#required-options","title":"Required options","text":"<ul> <li><code>--fq</code> : The path to 2<sup>nd</sup>-seq FASTQ file (read 1) that contains the sequences that should match with the spatial barcode dictionary.</li> <li><code>--sbcds</code> : The path to the spatial barcode dictionary directory, generated by <code>build-sbcds</code> or <code>combined-sbcds</code>. It should contain <code>manifest.tsv</code> file and corresponding barcode map for each tile in the manifest file.</li> <li><code>--out</code> : The prefix for the output files. See Expected Output for more details.</li> </ul>"},{"location":"tools/match_sbcds/#additional-options","title":"Additional options","text":"<ul> <li><code>--batch</code> : The size of single batch for performing the matching process. Each batch will be processed and the output will be written to temporary files, and merged at the end. The default value is 300M (300000000).  </li> <li><code>--skip-sbcd</code> : The number of bases to be skipped in the beginning of the read. This is useful when insufficient bases are sequenced in the 1<sup>st</sup>-seq spatial barcode, which is reverse complemented.  </li> <li><code>--skip-duplicates</code> : Skip  barcodes that occurs multiple times in the barcode map. By default, one of the duplicate barcodes are arbitrarily selected and written to the output.</li> <li><code>--match-len</code> : The length of the spatial barcode to consider for a match. The default is 27, and the maximum possible value is 27. </li> </ul>"},{"location":"tools/match_sbcds/#expected-output","title":"Expected Output","text":"<p>With <code>[out_prefix]</code> as the prefix, the following files will be created:</p> <ul> <li><code>[out_prefix].match.sorted.uniq.tsv.gz</code> : A compressed tsv file containing the following entries in each row:<ol> <li>Spatial barcode (alphebetically sorted) </li> <li>Lane of spatial coordinate</li> <li>Tile of spatial coordinate</li> <li>X-coordinate of spatial coordinate</li> <li>Y-coordinate of spatial coordinate</li> <li>Number of bases that do not match the expected pattern defined by the format (0 is a perfect match).</li> <li>Number of occurrences in the 2<sup>nd</sup>-seq FASTQ file.</li> </ol> </li> <li><code>[out_prefix].summary.tsv</code> : A tab-delimited file summarizing the overall statistics of matching barcode<ul> <li><code>Type</code> : The type of statistics, including the following values:<ul> <li><code>Total</code> : All reads in the 2<sup>nd</sup>-seq FASTQ file.</li> <li><code>Miss</code> : Reads that do not contain matching spatial barcodes.</li> <li><code>Match</code> : Reads that match with a spatial barcode.</li> <li><code>Unique</code> : Unique spatial barcodes that has matches.</li> <li><code>Dup(Exact)</code> : Duplicate barcodes calculated as <code>Match</code> - <code>Unique</code>.</li> </ul> </li> <li><code>Reads</code> : The number of reads or barcodes that match the type.</li> <li><code>Fraction</code> : The fraction of the reads (among all reads) that match the type.</li> </ul> </li> <li><code>[out_prefix].counts.tsv</code> : A tab-delimited file summarizing the matching barcode statistics per tile. It contains the following entries in each row:<ul> <li><code>id</code> : The ID of the tile, in the format of <code>lane_tile</code>.</li> <li><code>filepath</code> : The name of the <code>tsv.gz</code> file containing spatial barcode map.</li> <li><code>barcodes</code> : The total number of spatial barcodes found in the tile.</li> <li><code>matches</code> : The number of barcodes that match the expected format.</li> <li><code>unique</code> : The number of unique barcodes that match the expected format.</li> </ul> </li> </ul>"},{"location":"tools/match_sbcds/#full-usage","title":"Full Usage","text":"<p>The full usage of the software tool is as follows:</p> <pre><code>$ ./spatula match-sbcds --help    \n[./spatula match-sbcds] -- Match the FASTQ file containing spatial barcodes with the spatial barcode dictionary\n\n Copyright (c) 2022-2024 by Hyun Min Kang\n Licensed under the Apache License v2.0 http://www.apache.org/licenses/\n\nDetailed instructions of parameters are available. Ones with \"[]\" are in effect:\n\nAvailable Options:\n\n== Input options ==\n   --fq              [STR: ]             : FASTQ file read 1 containing 2nd-seq spatial barcode\n   --sbcd            [STR: ]             : Spatial barcode dictionary generated from 'build-sbcds' command\n   --batch           [INT: 300000000]    : Size of a single batch\n   --skip-sbcd       [INT: 0]            : Skip first bases of spatial barcode (Read 1)\n   --match-len       [INT: 27]           : Length of HDMI spatial barcodes to require perfect matches\n   --skip-duplicates [FLG: OFF]          : Skip duplicate barcodes that occurs multiple times\n\n== Output Options ==\n   --out             [STR: ]             : Output prefix (index.tsv, matches.tsv.gz)\n\n\nNOTES:\nWhen --help was included in the argument. The program prints the help message but do not actually run\n</code></pre>"},{"location":"tools/reformat_fastqs/","title":"spatula reformat-fastqs","text":""},{"location":"tools/reformat_fastqs/#summary","title":"Summary","text":"<p><code>spatula reformat-fastqs</code> takes paired-end FASTQ files and reformats it into a format that can be used by <code>STARsolo</code> by filtering out irrelevant reads while arranging the barcodes and UMI sequences. Specifically, the software achieves the following:</p> <ul> <li>Filter out reads that does not have matching barcode sequences in the spatial barcode dictionary.</li> <li>Reformat the Read 1 sequences to be compatible with <code>STARsolo</code>, by copying the UMI sequences next to the spatial barcode sequences in Read 1.</li> <li>Trim Read 2 sequences to a specified length, which typically helps increase the mapping rates.</li> <li>If needed, trim the beginning of Read 1 sequences to match the spatial barcode sequences.</li> </ul> <p>Here is a summary of a typical use case:</p> <ul> <li>Input: Takes (a) a pair of FASTQ files and (b) tsv files containing spatial barcodes to be matched.</li> <li>Output: Produces a pair of (uncompressed) FASTQ files after filtering reads and rearranging the part of sequences. </li> </ul> <p>A typical example is as follows:</p> <pre><code>spatula reformat-fastqs --fq1 /path/to/input.R1.fastq.gz \\\n                        --fq2 /path/to/input.R2.fastq.gz \\\n                        --match-tsv /path/to/match_sbcds_prefix1.match.sorted.uniq.tsv.gz \\\n                        --match-tsv /path/to/match_sbcds_prefix2.match.sorted.uniq.tsv.gz \\\n                        --match-tsv /path/to/match_sbcds_prefix3.match.sorted.uniq.tsv.gz \\\n                        --skip-sbcd 1 \\\n                        --len-sbcd 31 \\\n                        --len-umi 9 \\\n                        --len-r2 101 \\\n                        --out1 /path/to/output.R1.fastq \\\n                        --out2 /path/to/output.R2.fastq\n</code></pre> <p>See below for a more detailed usage description.</p>"},{"location":"tools/reformat_fastqs/#required-options","title":"Required options","text":"<ul> <li><code>--fq1</code> : The path to the FASTQ file of Read 1, which typically contains spatial barcode sequences.</li> <li><code>--fq2</code> : The path to the FASTQ file of Read 2, which typically contains UMI sequences and cDNA sequences.</li> <li><code>--match-tsv</code> : (Multiples allowed) The output <code>match.sorted.uniq.tsv.gz</code> file from <code>spatula match-sbcds</code> that contains the spatial barcode sequences to be matched. </li> <li><code>--out1</code> : The path to the output FASTQ files of Read 1.</li> <li><code>--out2</code> : The path to the output FASTQ files of Read 2. See Expected Output for more details.</li> </ul>"},{"location":"tools/reformat_fastqs/#additional-options","title":"Additional Options","text":"<ul> <li><code>--len-match</code> : The length of the spatial barcode to consider for a match. The default is 27, and the maximum possible value is 27.</li> <li><code>--len-sbcd</code> : The length of the spatial barcode sequence to be copied in Read 1. The default is 30, and must be equal or smaller than actual spatial barcode length.</li> <li><code>--len-umi</code> : The length of the UMI sequence (randomer) to be copied from Read 2 (beginning) to Read 1 (after spatial barcode). The default is 9.</li> <li><code>--len-r2</code> : The length of Read 2 sequences to be trimmed. The default is 101.</li> <li><code>--skip-sbcd</code> : The number of bases to be skipped in the beginning of the read. This is useful when insufficient bases are sequenced in the 1<sup>st</sup>-seq spatial barcode, which is reverse complemented. The default is 1.</li> </ul>"},{"location":"tools/reformat_fastqs/#expected-output","title":"Expected Output","text":"<ul> <li><code>[out1]</code> is output FASTQ file for Read 1. It should contain spatial barcodes, followed by the UMI (randomer) sequences.</li> <li><code>[out2]</code> is output FASTQ file for Read 2. It should contain the cDNA sequences, which includes the randomer sequence, trimmed to the specified length.</li> </ul>"},{"location":"tools/reformat_fastqs/#full-usage","title":"Full Usage","text":"<p>The full usage of <code>spatula reformat-fastqs</code> can be viewed with the <code>--help</code> option:</p> <pre><code>$ ./spatula reformat-fastqs --help\n[./spatula reformat-fastqs] -- Reformat FASTQs to be ready for STARsolo alignment\n\n Copyright (c) 2022-2024 by Hyun Min Kang\n Licensed under the Apache License v2.0 http://www.apache.org/licenses/\n\nDetailed instructions of parameters are available. Ones with \"[]\" are in effect:\n\nAvailable Options:\n\n== Input options ==\n   --fq1       [STR: ]             : FASTQ file for read 1\n   --fq2       [STR: ]             : FASTQ file for read 2\n\n== Filtering options ==\n   --match-tsv [V_STR: ]           : .matched.tsv.gz file(s) to filter FASTQ file based on spatial barcodes\n   --len-match [INT: 27]           : Length of perfect match required with 2nd-seq FASTQ (27 or less)\n\n== Output Options ==\n   --out1      [STR: ]             : Output FASTQ file for read1\n   --out2      [STR: ]             : Output FASTQ file for read2\n   --skip-sbcd [INT: 0]            : Skip first bases of spatial barcode (Read 1)\n   --len-sbcd  [INT: 30]           : Length of spatial barcode (Read 1)\n   --len-umi   [INT: 9]            : Length of UMI or randomer (Read 2)\n   --len-r2    [INT: 101]          : Length of Read 2 to trim (including randomers)\n\n\nNOTES:\nWhen --help was included in the argument. The program prints the help message but do not actually run\n</code></pre>"},{"location":"tools/subset_sge/","title":"spatula subset-sge","text":""},{"location":"tools/subset_sge/#summary","title":"Summary","text":"<p><code>spatula subset-sge</code> creates a subset of spatial gene expression (SGE) matrix based on the boundary of coordinates specified by the input arguments, or input geojson file.</p> <p>Here is a summary of a typical use case:</p> <ul> <li>Input: Takes spatial gene expression (SGE) matrix created by <code>dge2sge</code>, and the boundary of coordinates specified by the input arguments, or input geojson file.</li> <li>Output: Produces a subset of the SGE matrix based on the specified spatial boundary. </li> </ul> <p>A typical use case is as follows:</p> <pre><code>spatula subset-sge --sge  /path/to/input/sge/dir/ \\\n                   --out  /path/to/output/sge/dir/ \\\n                   --json /path/to/geojson/file.geojson\n</code></pre> <p>See below for a more detailed usage description.</p>"},{"location":"tools/subset_sge/#required-options","title":"Required options","text":"<ul> <li><code>--sge</code> : The path to the input SGE directory that contains <code>barcodes.tsv.gz</code>, <code>feature.tsv.gz</code>, and <code>matrix.mtx.gz</code> file generated by <code>dge2sge</code>.</li> <li><code>--out</code> : The path to the output SGE directory that contains a subset of the original SGE files.See Expected Output for more details.</li> <li>In addition, either <code>--json</code> or <code>--xmin</code>/<code>--xmax</code>/<code>--ymin</code>/<code>--ymax</code> are expected. (See Additional Options for more details)</li> </ul>"},{"location":"tools/subset_sge/#additional-options","title":"Additional Options","text":""},{"location":"tools/subset_sge/#options-related-to-the-boundary-file-in-geojson-format","title":"Options Related to the Boundary file in geojson Format.","text":"<ul> <li><code>--json</code> : The path to the input geojson file that contains the boundary of the spatial coordinates. Note that the unit of geojson file is micron (um), and the scale has to be matched by <code>--px-per-um</code> parameter. The boundary is defined by the <code>geometry</code> field in the geojson file. The boundary is expected to be a set of polygons, and the coordinates are expected to be in the same coordinate system as the spatial coordinates in the SGE matrix.</li> <li><code>--json-x-offset</code> : The x-coordinate offset to be added to the boundary defined in the geojson file. This is useful when the boundary is defined in a shifted coordinate system from the spatial coordinates in the SGE matrix.</li> <li><code>--json-y-offset</code> : The y-coordinate offset to be added to the boundary defined in the geojson file. This is useful when the boundary is defined in a shifted coordinate system from the spatial coordinates in the SGE matrix.</li> <li><code>--px-per-um</code> : Number of pixel units in the SGE matrix per micron (um). This is used to convert the boundary defined in the geojson file to the coordinate system of the SGE matrix.</li> </ul>"},{"location":"tools/subset_sge/#other-options","title":"Other Options","text":"<ul> <li><code>--xmin</code> : The minimum value of the x coordinate to crop the SGE matrix.</li> <li><code>--xmax</code> : The maximum value of the x coordinate to crop the SGE matrix.</li> <li><code>--ymin</code> : The minimum value of the y coordinate to crop the SGE matrix.</li> <li><code>--ymax</code> : The maximum value of the y coordinate to crop the SGE matrix.</li> <li><code>--out-minmax-fixed</code> : Do not update the range of x/y coordinates of the subset SGE matrix. By default, the <code>barcodes.minmax.tsv</code> file will be generated based on the coordinates of the cropped SGE matrix. With this option turned on, the <code>barcodes.minmax.tsv</code> will be identical to the original SGE matrix.</li> <li><code>--whitelist</code> : The whitelist barcodes to be subsetted to. This is useful when external softwares are used to precisely select the barcodes to be subsetted to. The whitelist file is expected to be a tsv file with the barcode sequences in the first column.</li> <li><code>--bcd</code> : The name of the barcode file in the SGE matrix. By default, it is <code>barcodes.tsv.gz</code>.</li> <li><code>--ftr</code> : The name of the feature file in the SGE matrix. By default, it is <code>features.tsv.gz</code>.</li> <li><code>--mtx</code> : The name of the matrix file in the SGE matrix. By default, it is <code>matrix.mtx.gz</code>.</li> <li><code>--minmax</code> : The name of tsv file specifying the rectangular boundary of the SGE matrix. By default, it is <code>barcodes.minmax.tsv</code>.</li> </ul>"},{"location":"tools/subset_sge/#expected-output","title":"Expected Output","text":"<p>In the output directory <code>[outdir]</code>, the following files will be created.</p> <ul> <li><code>[outdir]/barcodes.tsv.gz</code> contains the list of barcodes in the subsetted SGE matrix. Each line contains the following information:<ol> <li>Barcode sequence</li> <li>Increasing index of the barcode (1-based), which is not necessarily contiguous.</li> <li>Sequential and contiguous index of the barcode (1-based). This should match to the integer IDs of barcodes in the <code>matrix.mtx.gz</code> file.</li> <li>Lane of spatial coordinate</li> <li>Tile of spatial coordinate</li> <li>X-coordinate of spatial coordinate</li> <li>Y-coordinate of spatial coordinate</li> <li>Comma-separated counts of observations in each <code>matrix.mtx.gz</code> file. The order of the counts should match the order of <code>--mtx</code> options.</li> </ol> </li> <li><code>[outdir]/features.tsv.gz</code> contains the list of genes in the subsetted SGE matrix. Each line contains the following information:<ol> <li>Gene ID (unique identifier)</li> <li>Gene name</li> <li>Sequential and contiguous index of the gene (1-based). This should match to the integer IDs of genes in the <code>matrix.mtx.gz</code> file.</li> <li>Comma-separated counts of observations in each <code>matrix.mtx.gz</code> file. The order of the counts should match the order of <code>--mtx</code> options.</li> </ol> </li> <li><code>[outdir]/matrix.mtx.gz</code> contains the subsetted spatial expression matrix in SGE format. After three header lines following the Market Exchange format, the matrix file contains the following information, separated by spaces.<ol> <li>barcode index (1-based)</li> <li>gene index (1-based)</li> <li>(multiple space-separated entries) counts of observations, in the order of input files in <code>--mtx</code> options.</li> </ol> </li> <li><code>barcodes.minmax.tsv</code> file contains four columns - <code>xmin</code>, <code>xmax</code>, <code>ymin</code>, and <code>ymax</code> or the spatial coordinates of subsetted SGE matrix.</li> </ul>"},{"location":"tools/subset_sge/#full-usage","title":"Full Usage","text":"<p>The full usage of <code>spatula subset-sge</code> can be viewed with the <code>--help</code> option:</p> <pre><code>$ ./spatula subset-sge --help\n[./spatula subset-sge] -- Subset Spatial SGE based on bounding box\n\n Copyright (c) 2022-2024 by Hyun Min Kang\n Licensed under the Apache License v2.0 http://www.apache.org/licenses/\n\nDetailed instructions of parameters are available. Ones with \"[]\" are in effect:\n\nAvailable Options:\n\n== Input options ==\n   --sge              [STR: ]             : Spatial gene expression directory\n   --bcd              [STR: barcodes.tsv.gz] : Barcode file path (e.g. barcodes.tsv.gz)\n   --ftr              [STR: features.tsv.gz] : Feature file path (e.g. feature.tsv.gz)\n   --mtx              [STR: matrix.mtx.gz] : Matrix file path (e.g. matrix.mtx.gz)\n   --minmax           [STR: barcodes.minmax.tsv] : Boundary file path (e.g. barcodes.minmax.tsv)\n\n== Filter options ==\n   --xmin             [INT: 0]            : Minimum x coordinate\n   --xmax             [INT: 2147483647]   : Maximum x coordinate\n   --ymin             [INT: 0]            : Minimum y coordinate\n   --ymax             [INT: 2147483647]   : Maximum y coordinate\n   --out-minmax-fixed [FLG: OFF]          : Do not update output minmax coordinates based on the observed points\n   --json             [STR: ]             : Geojson file containing multiple polygons\n   --json-x-offset    [FLT: 0.00]         : X-offset to add to the geojson boundary\n   --json-y-offset    [FLT: 0.00]         : Y-offset to add to the geojson boundary\n   --whitelist        [STR: ]             : Barcode whitelist file path\n   --px-per-um        [FLT: 1000.00]      : Pixels/um scale (default: 1000, 26.67 for HiSeq2500, 28.75 for NovaSeq 6000)\n\n== Output Options ==\n   --out              [STR: ]             : Output directory\n\n\nNOTES:\nWhen --help was included in the argument. The program prints the help message but do not actually run\n</code></pre>"}]}